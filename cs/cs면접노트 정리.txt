1.디자인패턴
	싱글톤:하나의 클래스에 딱 하나의 인스턴스만 생성되게 강제하는패턴,db에 많이 사용되고 생성자에서 없을시 생성,있으면 있는거 리턴하는식으로 작동시키면됨
		단점으로는 유닛테스트를 할때도 딱 하나만 생성돼서,각 유닛별로 분리가 어려워짐
		그리고 이걸 사용하면 모듈간의 의존성이 강해지는데,
		이걸 해결하기위해 의존성주입(상위 하위 중간에 인터페이스를 두고,양쪽다 그거에 의존하는거)을 하면 해결할수있음
		
	팩토리:객체 생성을 하는 부분을 떼어내서,그부분만 추상화하는 패턴,
		이걸하면 상속관계에 있는 두 클래스에서 상위클래스가 중요한 뼈대를 결정하고,하위클래스는 객체생성에 관한 구체적내용을 결정할수있음
		그래서 상위와 하위가 분리되니까 느슨한 결합을 가지게되고,유연성이 높아지고,객체생성이 떨어져나가서 코드수정할때 한곳만 고치면됨
		
	전략:객체의 행위를 바꾸고싶을때,직접 수정하지않고 전략클래스를 교체해가면서 사용할수 있게 만드는 패턴,passport같은곳에서 사용됨
	
	옵저버:객체가 자기 상태가 바뀌었을때 자기를 구독한 애들한테 바뀌었다고 신호를 보내주는 패턴
		이렇게하면 객체와 구독자들 간에 연결이 끊기고,밑에를 생각할필요없이 객체는 자기자신을 수정할수있음,
		주로 mvc패턴에도 사용되고,이벤트기반ms에도 사용됨
		js에서는 프록시를 통해 구현할수있음
	
	프록시:객체의 앞에 프록시객체를 둬서 프록시객체가 객체를 실행하게 하는패턴,
		객체 앞에 프록시가 있으니까,거기서 추가작업을 하든가,객체연결을 거부하든가 등등 여러가지 일을 할수있음
		프록시에 캐시를 넣어서 캐시프록시로도 사용할수있음
		웹서버에선 nodejs앞에 nginx를 넣어서 사용하기도 하고,프런트엔드 앞단에 프록시를 둬서 cors에러를 막을수도있음
		
	이터레이터:반복자를 사용해서 컬렉션들을 같은인터페이스로 조회하는 패턴,foreach임
	
	노출모듈:private나 public가 없는 자바스크립트에서 그걸 생성하는패턴,클로저를 사용함
		  클로저를 만들고,그 클로저가 public고 그외의 내부변수가 private인 식임
		  
	mvc:앱을 모델,뷰,컨트롤러로 분할하고,뷰는 진짜 보이는것만,모델은 실제 상태변화나 db같은걸 넣고,
		컨트롤러는 실제 이벤트등 메인로직으로 뷰가 변경되면 컨트롤러가 작동해서 모델을 건드림,컨트롤러는 간단한 뷰컨트롤(버튼비활성화정도)을 할수있음		
		모델과 컨트롤러,뷰는 서로 옵저버패턴으로 연결되어있고,뷰와 컨트롤러는 뷰가 컨트롤러를 전략패턴으로 사용할수있음
		
	
2.프로그래밍 패러다임
	기본적으로 선언형과 명령형으로 나뉘고,선언형은 하위에 함수형을 포함하고,명령형은 객체지향과 절차지향으로 나뉨
	
	함수형 프로그래밍은,순수함수들을 쌓아나가서 로직을 구현하고,고차함수(함수가 함수를 매개변수로 받는거)를 통해 재사용성을 높이는 방식임
	이러려면 일급객체(변수나 메서드에 함수할당가능,함수안에 함수 매개변수담기 가능,함수가함수를 반환가능)여야 함
	
	객체지향은 객체들의 집합으로 상호작용을 표현하고,데이터를 객체로 취급해서 객체 내부에 선언된 메서드를 활용하는식임
	얘는 추상화,캡슐화,상속성,다형성등이 특징임
	설계원칙으로는 
		단일책임원칙,
		개방폐쇄원칙,
		리스코프치환원칙(부모객체대신 자식객체를 넣어도 동작해야함),
		인터페이스분리원칙(인터페이스 하나보단 구체적인 여러개),
		의존역전원칙(상위와 하위의 중간에 인터페이스를 둬서,상위가 하위에 의존하는걸 역전시킴)
	등이 있음
	
	절차지향은 로직이 수행되는 순서대로 구현하는식,머신러닝같은데에 자주쓰임,단점으로 모듈화가 어렵고 유지보수성이 떨어짐
	
	
	
3.네트워크
	네트워크의 구조엔 트리토폴로지,
	버스(중앙회선에 각노드들이 연결된형태,단 스푸핑이 가능해서 잘안쓰는듯)토폴로지,
	스타토폴로지(중앙에 메인스위치가 있고,거기에 다 연결된형태,단 중앙이 뻗으면 네트워크가 다뻗음),
	링형 토폴로지(각 노드가 양쪽에 연결을 갖고,양쪽으로 통신,단점으로 하나가 뻗으면 전체네트워크가 영향을받음,끊기진않음 양방향연결이니까)
	메시토폴로지(각 노드가 모든 노드에 연결을 가지는구조,단점으로 추가가어렵고 구축,운용이 비쌈)
	
	네트워크 성능분석 명령어로는
		ping:핑
		netstat:접속된 서비스들의 네트워크상태를 표시,보통 서비스포트확인할때 주로사용함
		nslookup:dns에 매핑된 ip를 확인할때 사용
		tracert(traceroute):목적지까지의 라우터경로를 알수있음
		
	osi 7계층으론 피지컬,데이터링크,네트워크,트랜스퍼,세션,프레젠테이션,애플리케이션 층이 있고
	tcp/ip4계층엔 링크,인터넷,트랜스퍼,애플리케이션 4계층이 있음
	각각 링크는 피지컬,데이터링크에 대응하고,인터넷은 네트워크,트랜스퍼는 트랜스퍼,애플리케이션은 세션,프레젠테이션,애플리케이션에 호환됨
	
	링크층은 실질적으로 전기나 광신호를 받아서 데이터로 변환하거나,데이터를 전기나 광신호로 변환하는 계층
	인터넷층은 받거나 보낼 데이터의 ip를  확인하고 그 주소를 지정해서 데이터를 전달하는 층,여기선 상대방이 제대로받았는지 보장하지않음
	트랜스퍼층은 송신자와 수신자를 연결하는 통신서비스를 제공함,여기서 tcp/udp가 선택됨
	애플리케이션층은 ftp,http,ssh같은걸 선택하는 층
	
	tcp에선 데이터전달할때 가상회선패킷교환방식으로,각 패킷에 번호를 부여해 순서대로 도착하는걸 보장하고,udp에선 싹무시하고 걍 집어던짐,도착할지말지도 모름
	tcp는 연결할땐 3way handshake를 사용하고(syn,synack,ack),해제할땐 4way handshake를 사용함(fin,ack,fin,ack)
	해제할때 마지막에 클라이언트가 ack를 보내고나면,클라이언트는 바로 해제하지않고 잠시 대기하는데,지연패킷이 있을수도 있어서 그거 대기해주는거
	
	
	앱에서 데이터를 전송할땐,전송할떈 캡슐화(위에서부터 순서대로 각층에서 헤더를 붙여서 전달하는작업),받을땐 언캡슐화(캡슐을 해제하는작업)을 함
	
	네트워크기기는 계층별로 처리범위를 나눌수있음,보통 높은곳에 있는건 그 밑의 모든 프로토콜을 처리할수있지만,
	낮은계층에 있는건 자기보다 위에있는건 처리할수없음
	
	그리고 보통 l7스위치와 l4스위치를 로드밸런서라고 부르고,l3스위치를 라우터라고 부름
	
	로드밸런서는 여러 조건들에 맞춰서 연결된 여러개의 서버로 부하를 분산해주는 장치임
	얘는 현재 상태가 맛이간애가 있으면 그걸체크하고 거기로는 안보내야하는데,그래서 정기적으로 서버에 헬스체크를 함(핑을 날려서 확인하던가,특정 rest를 날리던가)
	l4와 l7로드밸런서의 차이는,
	l4는 ip,포트단위로만 처리할수있어서 스트리밍관련엔 사용할수없음
	l7은 ip,포트외에도 url,http헤더,쿠키들을 기반으로 트래픽을 분산할수있음
	
	보통 aws에서는 l7을 alb라고 하고,l4를 nlb라고 함
	
	라우터는 여러 네트워크를 연결,분할,구분시켜주는 애임,얘는 다른 네트워크에 존재하는 장치끼리 서로 데이터를 주고받을때 패킷소모를 최소화하고,
	경로를 최적화해서 최소경로로 패킷을 포워딩하는 장치임
	
	l2스위치는 맥주소로 들어온 패킷을 전달해주는 장치임
	
	
	통신을 할땐 ip주소에서 arp를 통해 mac주소를 찾아서 mac주소를 기반으로 통신하게됨
	arp는 ip주소로부터 mac주소를 구하는,ip와 mac의 다리역할을 하는 프로토콜임
	arp를 통해 가상주소인 ip를 실제주소인 맥으로 변환하고,또 반대로 rarp를 통해 실제주소인 mac을 가상주소인 ip로 변환하기도 함
	
	즉 공유기까진 ip로 간다음에,공유기에서 내부 연결된 기기로 갈땐 맥으로 가야하니까,보낼쪽에서도 ip와 맥 두개가 다 필요함
	
	nat은 사설ip를 공인ip로 바꿔치기하는 방법임,보통 게이트웨이가 이걸 처리함(공유기)
	
	http1과 http2의 차이점은,동시에 여러파일을 보낼수 있게된것과,클라가 요청하지않아도 서버가 먼저 리소스를 푸시할수있게된것
	
	http에서 https의 차이는,ssl/tls가 추가되었다는것
	ssl은 공개되어있는 서버의 공개키(공개키는 서버에 요청하면 줌)로 내 대칭키를 암호화 해서 보낸다음에,
	그 대칭키를 사용해서 통신을 해서,인터셉터를 방지하는 프로토콜임
	단 이건 해커가 아예 사이트채로 만들어버리면 답이없어서 나온게 인증서(ca)임
	믿을수있는 기관에서,여긴 믿을수있는곳이라는걸 보증해주는거임
	
	
4.운영체제	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	