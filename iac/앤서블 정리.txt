앤서블은,주로 만들어진 인프라에 설치하거나 뭐 스크립트돌리거나 하는식으로 사용되는 ioc툴임


앤서블에서 인벤토리는,여러 컴퓨터를 묶어둔거,ssh를 사용해서 수행됨
앤서블은 에이전트리스임,그래서 os자체의 기능을 사용해서 연결해서 작업을 함
그때 연결할 대상들이 모여있는게 인벤토리파일임

만약 인벤토리파일이 없으면,기본인벤토리파일을 사용함
이건 /etc/ansible/hosts에 있음

인벤토리파일은 ini와 유사한형태임
그형태로 서버들이 나열되어있음(서버주소,ip형태나 dns형태)
	server1.company.com
	server2.company.com
	[mail]
	server3.company.com
	server4.company.com
이걸 그룹화 시킬수도 있음
단일 인벤토리파일에 여러 그룹이 들어갈수있음

그리고 각 서버에 별칭을 붙이려면(alias)
	web ansible_host=server1.company.com
	db ansible_host=server2.company.com	
이런식으로
	붙일이름 ansible_host=서버주소
하면됨
그리고 이걸 그룹화할땐
	web ansible_host=server1.company.com
	db ansible_host=server2.company.com
	[webserver]
	web
	[dbserver]
	db
이렇게 쓰면됨
만약 그룹의 그룹을 넣고싶으면
	[그룹이름:children]
	자식그룹이름1
	자식그룹이름2
이렇게 넣으면됨,children선언해주고 그대로쓰면됨

이건 ini방식이고,yaml방식도 있음
	all:
		hosts://뭘 생성할떈 이게 필요함
			주소ipdns1:
		children:
			그룹의그룹이름:
				그룹명1:
					hosts:
						주소ipdns2:
						주소ipdns3:
				그룹명2:
					hosts:
						주소ipdns4:
						주소ipdns5:
		


이런 앤서블인벤토리 매개변수엔 여러개가있는데
	ansible_connection=ssh/winrm/localhost(연결방법을 정의)
		web ansible_host=server1.company.com ansible_connection=ssh //이런식
		localhost ansible_connection=localhost
	ansible_port=22/5986(연결할포트를 정의,ssh의경우 기본값은 22임)
		
	ansible_user=root/adminstrator(연결할계정을 정함)
		web ansible_host=server1.company.com ansible_connection=ssh ansible_user=root
		web ansible_host=server1.company.com ansible_connection=ssh ansible_user=admin//이런식
		
	ansible_ssh_pass=패스워드(ssh연결할때 패스워드필요하면 여기적을수있음)
		web ansible_host=server1.company.com ansible_connection=ssh ansible_user=root ansible_ssh_pass=123qk
	ansible_password=패스워드(이건 윈도우용)
여기서 패스워드는 가능하면 ssh키기반으로 하고,패스워드는 없애는게좋음,플레인텍스트로 주고받아야하는데 보안에안좋음


그리고 
	ansible 대상서버별칭 -m ping -i 인벤토리파일.txt
로 핑을 날려볼수있음
그러면 TF로 리턴이옴

그리고 
	ansible --list-hosts abcd.example.com
으로 현재 저 값이 있는지없는지를 확인할수있고,제대로 인벤토리가 물렸는지도 확인할수있음
그리고


아예 저거 ssh 패스워드체크를 없애버리고싶으면
	/etc/ansible/ansible/cfg의 host_key_checking=False를 주석을 제거하면 됨
근데 이건 추천하진않는대 프로덕션에서
애초에 패스워드를쓰면안되고,ssh키써야된다고함





앤서블은 yaml로 작업을 함
근데 내가 지금 야믈을 할이유가잇을까



앤서블 플레이북은 앤서블의 언어임
앤서블에 일을 시킬땐,이 언어로 적어야함

기본적으론
	run command1 on server1
	run command2 on server2
	Restarting server1
	Restarting server2
이런식으로 적을수도있지만,이러면 대량의 서버에서 쓰기힘들고,재사용도 힘듬

모든 플레이북은 yaml포멧으로 적히고,확장자도 .yml임
앤서블 플레이북은 단일 yaml파일이고,
그안에서 대상을 지정하고(그룹같은 인벤토리에 들어있는),명령이나 스크립트를 실행(패키지설치같은)하거나 재시작하는거임
플레이북의 형태는
	-  name: 플레이북이름
	   hosts:localhost //대상,인벤토리에 들어있는 그룹같은거
	   tasks:
	   -  name: 명령이름
	      command: date//리눅스커맨드
	   -  name: 명령이름
	      script: test.sh//스크립트실행
	   -  name: 명령이름
	      yum:
		   name: httpd
		   state: present
	   -  name: 명령이름
	      service:
		    name: httpd
			stete: started

그리고 플레이북은,위에서부터 순서대로 실행됨
그리고
	-  name: 플레이북이름1
	   hosts:localhost //대상,인벤토리에 들어있는 그룹같은거
	   tasks:
	   -  name: 명령이름
	      command: date//리눅스커맨드
	   -  name: 명령이름
	      script: test.sh//스크립트실행
	   -  name: 명령이름	
	   
	-  name: 플레이북이름2
	   hosts:localhost //대상,인벤토리에 들어있는 그룹같은거
	   tasks:
	   -  name: 명령이름
	      yum:
		   name: httpd
		   state: present
	   -  name: 명령이름
	      service:
		    name: httpd
			stete: started

이런식으로 두개이상으로 나누는거도 가능함,그리고 야믈이니까,서순은 별상관없음 당연히,name이 젤위에오는게 기본적이긴하지만,호스트랑 자리바꿔도됨
그렇지만 task는 리스트니까,순서가 있고,순서대로 실행됨

앤서블에서 모듈은,테스크에서 사용하는 command,script,yum,service같은거임
상세정보는 공식도큐에서 볼수있고,
기본적으로 쓰는건 저거정도만 알고있으면됨

그리고 앤서블을 실행할땐
	ansible-playbook 앤서블파일이름.yaml -i 인벤토리파일.txt
하면됨



간단한 명령을할때,플레이북을 작성하고싶지않으면
	ansible 호스트(대상) -a 커맨드 -i 인벤토리파일.txt
	ansible 호스트(대상) -m 모듈 -i 인벤토리파일.txt
를 할수있긴함,선언형이라는거에선 많이 어긋나지만
	ansible target1 -m ping
이런식


자기는 atom ide쓰고있는데 좋으니까 써보래


그리고 핑모듈은
	tasks:
	-  name:이름
	   ping:
이러면 나감 

카피모듈은
	tasks:
	-  name:이름
	   copy:
	     src:원본경로
		 dest:복사할경로
이러면 원본경로에 있는 파일이나  폴더를 복사경로에 붙여넣음		 

그리고 yamllint.com에서 yaml문법테스트 할수있다고함,그리고 atom에 플러그인을 깔아서 yaml문법을 인식할수잇게 할수있다고함(linter-js-yaml)

atom의 remote sync를 깔면,리눅스머신의 파일을 윈도우에서 열수있다고함
설치하고나서 폴더를 오른쪽클릭하면 밑에 리모트싱크있는데 거기서 설정하고(ip,포트 22,동기화할 경로,패스워드,유저네임)
업로드 폴더,다운로드폴더로 파일을 올리거나 받을수있음


앤서블은 멱등성이 있기때문에,선언한 형태에 맞추려고 하니까,이미 상태가 같다면 추가작업을 하지않음















































