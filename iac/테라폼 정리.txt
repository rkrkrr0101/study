앤서블,치프등은 이미 만들어진 인프라에 소프트웨어를 설치하고 관리하는데 사용됨(db,서버,네트워크등 )
여기서 가장 중요한건 멱등성이 있어서,실행할때마다 변경사항만 적용된다는것

도커,베이그란트는 컨테이너의 이미지를 만드는것

테라폼,클라우드포메이션은 프로비저닝을 하는데 사용됨(즉 실제로 ec2같은걸 할당받는거)

테라폼의 장점은 여러 플랫폼(aws,gcp,azure)에 똑같이 사용할수있다는것,즉 플랫폼종속성이 없음

테라폼도 선언적으로 작동하고,선언을 하면 거기서 바뀐거만 추가하거나 삭제해서,멱등성이 있음

테라폼은 hcl언어를 사용함

hcl은 기본적으로
	<block> <parameters>{
		키1=밸류1
		키2=밸류2
	}
로 구성됨
만약 파일을 만들거면 만들폴더로 이동해서
	resource "local_file" "pet"{
		filename="/root/pets.txt"
		content='abcd'
	}
여기서 리소스는 키워드임,블록으로 리소스타입을 지정하고,그뒤에(로컬파일)원하는 리소스타입을 적음
로컬파일은 로컬과 파일 2개의 정보인데,앞의 로컬은 프로바이더고(원하는곳)뒤의 파일은 리소스타입임
그뒤의 pet는 리소스이름임

그리고 안의 키밸류들은 아규멘트임
기본적으로 저건 리소스 유형에따라 달라지고,정확한 이름에 따라 거기에 값이 들어가는형태
여기서 파일네임은 이름을 정하고,컨텐츠는 그안에 들어갈 값을 정함
만약 ec2에선 
	resource "aws_instance" "webserver"{
		ami= "ami-0c2f25c1f66a1ff4d"
		instance_type= "t2.micro"
	}
이런식으로 적고,저런 아규멘트를 받아먹음
s3버킷에선
	resource "aws_s3_bucket" "data"{
		bucket="webserver-bucket-org-2207"
		acl="private"
	}
이런식

보통 간단한 테라폼의 워크플로는
	구성파일작성
	terraform init
	terraform plan
	terraform apply
이런식으로 감

여기서 init는 구성파일을 확인하고 그 디렉토리를 초기화하고,리소스에서 작업할수있게(aws같은 클라우드에서 작업할수있게)플러그인을 받음
plan은 이 구성파일을 적용하면 수행할 작업을 미리보기함,여기엔 적용되는 아규멘트들같은거도 다표시되고,전과 바뀐게 뭔지같은게 표시됨
여기서 +기호는 이번적용에 추가된다는거고 -는 빠진다는것 ~는 업데이트,업데이트가있으면 삭제하고 다시생성됨(변경할수없는인프라의경우)
그리고 apply로 적용하면됨
만약 삭제하고싶으면 terraform destroy하면됨

그리고 terraform show로 만든 리소스의 세부정보를 볼수도있음(플랜에서 표시되던거와 같음)
그리고 저기서 리소스타입과 아규멘트는 종류마다 다르니까(aws랑 구글이랑 아주레랑) 테라폼공식도큐가서 찾아서쓰래















