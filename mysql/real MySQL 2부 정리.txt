11.쿼리 작성 및 최적화
	필요없는건 스킵
	앞부분에 5.7이랑 8.0이랑 호환설정같은거 있으니 책 참고(안시쿼리호환설정도있음)
	
	테이블은 항상 대문자나 소문자로 통일해서 만들기
	예약어인지 확인할떈,해당이름으로 테이블만들어서 만들어지면 예약어아니고,안만들어지면 예약어임
	이때 역따옴표를 붙이면 테스트가 안되고,기본적으로 테이블생성시 역따옴표를 안쓰는게좋음
	
	mysql 메뉴얼에서
		대문자는 키워드
		이탤릭체는 토큰(테이블명,칼럼명,표현식)
		대괄호는 선택사항
		파이프는 하나만 선택가능
		중괄호는 괄호내에서 반드시 하나를 선택해야함(필수사항)
		...은 앞에 명시된 키워드나 표현식의 조합이 반복될수있음을 의미함
	이거알면 대충볼수있음
	
1.mysql연산자와 내장함수
	문자열은 ''와 ""를 혼용가능,예약어충돌은 ``쓰면되는데 안쓰는게좋음 가능하면
	숫자는 그냥 넣으면되고,문자열과 숫자를 비교하는건 가능하면 안하고 통일시키는게좋음 타입을
	날짜타입은 date고 스트링도 포맷만 맞으면 날짜랑 비교를 할수있음
	불리언타입은 있긴한데,이건 그냥 tinyint임,그래서 이거쓰지말고 enum쓰는게좋음
	
	연산자는
		= 동등비교(null=null   -> null)
		<=> 널을포함한 동등비교(null<=>null -> true)
		<>,!=부정비교
		not,! 부정연산(tf연산을 뒤집음)
		and(&&),or(||) 연산결합,기호대신 문자쓰는게 가독성좋음
		/,div 나누기
		%,mod 나머지
		regexp 정규식일치확인
		rlike 정규식 라이크
		like 부분일치(인덱스타려면 aaa%식으로 써야함 %aaa는 못탐),%와 _를 사용할수있음
		between 양쪽사이의 값(이건 인덱스타기 힘드니까 인덱스 작업범위결정조건용 조건을 앞에 넣어두는게좋음),가능하면 in으로 바꾸는게 성능상좋음
		in 여러값에 대해 이퀄연산
	등이 있음	
	
	내장함수에는
		ifnull():널이면 다른값으로 변경
		isnull():널인지 아닌지 확인
		now():현재시간반환,정확히는 트랜잭션을 시작한시간을 반환함
		sysdate():사용금지
		date_format():datetime타입을 스트링으로 반환
		str_to_date():스트링을 datetime타입으로 변경
		date_add():날짜시간을 지정한만큼 추가
		date_sub():날짜시간을 지정한만큼 감소
		unix_timestamp():1970년1월1일 00:00:00로 부터 경과된 초를 반환(디폴트는 현재,해당데이트타임넣으면 그때의 타임스탬프반환)
		rpad():해당문자열의 오른쪽을 해당길이만큼 해당문자로 채워줌
		lpad():해당문자열의 왼쪽을 해당길이만큼 해당문자로 채워줌
		rtrim():해당문자열의 오른쪽의 공백을 지워줌
		ltrim():해당문자열의 왼쪽의 공백을 지워줌
		trim():해당문자열의 양쪽의 공백을 지워줌
		concat():여러문자열을 합쳐서 리턴(숫자를넣으면 문자열로 바꿔서더함)
		concat_ws():여러문자열을 합쳐서 리턴,중간에 구분자넣기도 가능(숫자를넣으면 문자열로 바꿔서더함)
		group_concat():그룹바이된 결과의 문자열들을 다 더해줌,구분자넣기도 가능,이때 메모리버퍼쓰는데 제한이 1kb니 시스템변수에서 늘릴수있음
		case when구문:스위치문임,보통 서브쿼리의 필요없는 동작을 막을때 사용(어짜피 버리는데 돌아가는거 막는다던가)
		cast():해당타입으로 변형
		convert():해당타입으로 변형 or 해당문자열의 인코딩형식 변경
		hex():해당숫자를 16진수스트링으로 변경
		unhex():16진수스트링을 바이너리로 변경
		md5():암호화함수,해시할때 사용하기도함
		sleep():쿼리를 해당시간동안 멈출수있음,보통 디버깅에사용
		benchmark():해당쿼리를 n번 실행시켜서 평균실행시간 리턴,단 계획수립은 1번만하니 이건 주의(두쿼리를 비교분석할때 사용하면됨)
		inet_aton():스트링ip주소를 바이너리타입으로 변형
		inet_ntoa():바이너리타입을 스트링ip주소로 변형
		json_pretty():json칼럼의 가독성을 좋게해줌
		json_storage_size():json칼럼의 바이트크기를 리턴해줌
		json_extract():json에서 특정값을 추출해옴,따옴표붙어있음,->연산자와 같음
		json_unquote():json에서 특정값을 추출해옴,따옴표없음,->>연산자와 같음
		json_contains():json전체,혹은 해당위치의 아래에 해당json필드가 있는지 확인
		json_object():해당칼럼들의 값으로 json을 생성
		json_objectagg():group by함수,칼럼들의 값으로 json을 생성
		json_arrayagg():group by함수,칼럼들의 값으로 json배열을 생성
		json_table():json값들을 모아서 rdbms테이블로 만들어서 반환함(임시테이블)
	등이 있음	
2.select		
		
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	