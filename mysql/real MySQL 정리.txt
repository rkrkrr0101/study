1.소개
	생략
2.설치와 설정
	설치버전은 가능한 최신버전에서 15~20릴리즈 버전을 선택(즉 최신-1이나 최신이 ~20넘기면 최신선택)
	연결은 
		mysql -uroot -p 패스워드 --host=ip입력 --port=3306
	이렇게
	
	버전업데이트는,한버전만 업데이트할거면 그냥 업데이트를 하고(인플레이스 업그레이드),
	두버전이상 뛰어야하면 mysqldump등으로 덤프뜬다음에 걍 새로깔고 다시 덮는게좋음(논리적 업그레이드)
	
	서버설정은,리눅스는 my.cnf,윈도우는 my.ini를 사용함
	현재읽고있는 파일의 위치는
		mysqld --verbose --help
	로 알수있음(앞에서부터 우선순위)
	
	설정파일은,각 []구역마다 각각의 응용프로그램이고,기본적으론 자기영역만 읽음(가끔 2개이상,즉 남의영역도 읽는애들도있음 보통 코어쪽읽음)
	mysql의 서버는,켜지면서 설정파일을 읽어 메모리에 저장해둠(시스템변수)
	이건
		show global variables
	로 볼수있음
	이건 또 글로벌변수와 세션변수로 나뉘고,
		cmd-line:cmd창에서 변경가능한지
		option file:my.ini로 제어가능한지
		system var:시스템변수인지 아닌지
		var scope:시스템변수의 적용범위,즉 전역인지 세션인지 둘다인지
		dynamic:변경시 다시 껐다켜야하는지
	같은 속성들이 있음	
		
	글로벌과 세션은 적용범위에 따라 나뉘는데,일반적으로 세션별로 적용되는 시스템변수의 경우 글로벌뿐아니라 세션변수에도 동시에 존재함
	이경우 both로 표시됨
	보통 세션변수가 시스템에 있는건,세션이 접속할때 기본값을 적어둔거,이걸 바꿔서 세션쪽에서 접근할수있게하는거임(autocommit같은거)
	
	동적변수일경우 set으로 변경하면 즉시적용되지만,my.ini에 저장되진않음,그래서 set persist로 해야 my.ini를 수정해서 영구적으로 적용됨
	그리고 이렇게 변경한 기록은 performance_schema.persisted_variables테이블에 남으니 확인할수있음
	그리고 아예 리셋하고싶으면 
		reset persist
	하면됨
		
		
3.사용자 및 권한		
	mysql에서의 계정은,단순한 아이디뿐 아니라 해당 사용자가 어느 ip에서 접속했는지까지 체크하고,해당 ip영역중 가장 좁은 영역으로 인식하게됨
	즉, abc라는 아이디와 192.168.0.1이라는 ip가 있으면,이 둘을 묶어서 아이디처럼 사용하는것(물론 ip에서 와일드카드사용가능)
	이거때문에 조심해야할건,같은아이디가 다른ip대역으로 있는데,서로 패스워드가 다르다면 접근에 문제가 생길수있음
	
	mysql 8.0부터 계정은 system_user권한을 가지고있냐에 따라 시스템계정과 일반계정으로 구분됨
	시스템계정은 계정관리(계정생성삭제,권한부여제거),다른세션의 쿼리 강제종료,혹은 세션종료,스토어드프로그램 생성시 definer을 타사용자로 설정등을 할수있음
	그리고
		mysql.sys@localhost
		mysql.session@localhost
		mysql.infoschema@localhost
	이 3개는 mysql이 사용하는계정이니 지우면안됨(보통 지우기도힘듬)
	
	그리고 8.0부터는 grant로 계정생성하면서 권한부여가 안되니,
		create user abc
		grant 권한명 on 객체대상 to abc //객체
		grant 권한명 on *.* to abc //글로벌
	이렇게 생성하고 권한부여를 해줘야함
	글로벌은 항상 대상자리에 *.*이 들어감,이건 서버전체를 의미,그래서 객체권한을 이렇게넣으면 서버전체적용
	
	아이디 생성시엔 56p참고해서 옵션들을 붙일수있음
	대충
		identified with:인증방식과 비밀번호설정(기본적으론 identified by '비밀번호' 쓰면됨)
	이게 메인이고,비밀번호의 유효기간과 변경강제 이런것들 있음
	그리고 비밀번호의 글자조합강제와 금칙어설정들도 가능함
	
	그리고 비밀번호를 2개설정하는거도 가능한데,이거로 응용프로그램서버들이 비밀번호를 db서버와 동시에 바꾸지않아도 되게 할수있음(순차적으로 수정)
	
	그리고 권한은,글로벌권한과 객체단위의 권한으로 나뉘는데(상세는 65p참조)
	db나 테이블 이외에서 사용하는건 글로벌권한,db나 테이블제어에 필요한권한을 객체권한이라고 함
	글로벌권한을 부여할땐 특정 객체가 나오면 안되고,객체권한을 부여할땐 반드시 특정객체가 나와야함
	예외적으로 all은 두가지용도로 다 사용될수있는데,객체에 all하면 해당객체의 모든권한,글로벌 all은 글로벌수준 모든권한을 부여함
	추가적으로 8.0부터는 동적권한도 추가됐는데,이건 서버가 시작되면서 동적으로 생성되는 권한임
	
	테이블의 특정 칼럼에 대해서만 권한을 줄수도있는데 이건 책보자(보통잘안씀)
	
	8.0부터는 권한을 묶어서 역할(role)로 만들수있음,그 k8s나 aws나 있던 그거랑 똑같음 권한들의 집합을 편하게쓰는거
		create role abcRole,bcdRole
		grant 권한명 on *.* to abcRole
		grant abcRole To abc
		set role 'abcRole'
	이렇게 똑같이 주면됨
	이때 주의할점은,반드시 set role로 롤을 활성화시켜야됨,그리고 이 롤은 계정이 로그아웃됐다 다시로그인하면 다시 활성화가 풀림
	그래서 이걸 영구적용하려면
		SET GLOBAL activate_all_roles_on_login=ON;
	이 옵션을 켜둬야함
	
	그리고 롤과 계정은 구분하기힘드므로(내부적으론 같은거로 취급함),롤에는 role_같은걸 붙여두는게좋음
	
4.아키텍쳐






























































		
		
		
		
		
		
		
	