mysql드라이버는
	implementation 'com.mysql:mysql-connector-j'
이전거('mysql:mysql-connector-java')는 이제못씀


레포지토리 모킹해서 테스트하고싶으면,애초에 구조를
	UserJpaRepository(JpaRepository 인터페이스)
	UserRepository(실제로 사용할 객체의 인터페이스,사용할메서드만 나열)
	UserRepositoryImpl(실제로 사용할 구현체,UserRepository를 구현하고,UserJpaRepository를 주입받아서 구현)
	MockRepository(UserRepository를 구현한 모킹객체,안에 메서드들만 알아서 만듬)
즉 이렇게 JpaRepository를 직접사용하는게 아닌,인터페이스를 둬서 추상화해서 테스트와 메인 둘을 양립하게 하는게나을듯

코틀린에선 findByIdOrNull쓰자,옵셔널을 쓸 이유가 없는 언어니까

자바코드 코틀린변환 잘 모르겠으면 그냥 테스트페이지에 자바코드 붙여넣고 코틀린으로 변환(컨트롤알트쉬프트k)해보자

코틀린에서 필터같은 predicate나오면 {}치고 it써서 대상 골라내면됨(foreach쓰는느낌)
	posts.removeIf { it.id == post.id }
이런식

완전히 하나의 테이블에 종속되어있는 엔티티라면,종속대상엔티티에서 연관관계에 cascade = [CascadeType.ALL]을 사용해서 완전히 관리할수도있음

결국 하위엔티티를 페이징하려면,네이티브쿼리를 쓰거나 jpql같이 돌아가긴해야하겠구나
결국 페치조인으로 해결할수없으니,깡조인해서 limit걸어야할듯
참고 https://www.inflearn.com/questions/178802/batch-size-%EC%99%80-limit-%EC%A7%88%EB%AC%B8%EC%9E%85%EB%8B%88%EB%8B%A4

빈벨리데이션할땐
	org.springframework.boot:spring-boot-starter-validation
를 추가해야함

코틀린에서 빈벨리데이션할떈
	@field:Size(min=1,max=72)
이렇게 앞에 필드를 붙여야함,생성자에서 필드까지 생성하기때문에,필드라는걸 명시안해주면 생성자에 붙어버림

자바에서
	return Member.class.isAssignableFrom(clazz);
이건 코틀린에서
	return Post::class.java.isAssignableFrom(clazz)
이거임

코틀린에서 상위->하위 캐스팅할땐(오브젝트를 스트링으로)
	val post:Post=target as Post
이렇게하면됨

page에서 현재페이지의 요소 갯수는 페이지객체.numberOfElements
테스트시 beforeeach로 계속 엔티티 생성하고 지우고 한다고해도,id값을 오토인크리즈먼트로 해버리면 계속 id는 올라가니까 주의

