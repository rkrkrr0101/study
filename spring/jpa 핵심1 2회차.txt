1.설계
	일대다 다대일에선 다쪽이 연관관계의 주인
	
	다대다는 중간테이블을 둬서 일대다 다대일로 풀수있는데,
	이때 명시적으로 테이블(중간엔티티)을 생성해야 중간에 뭘 추가하거나 하기좋아서 필수적으로 명시적으로 생성해야함
	공통적인건 임베디드타입으로 뺴면편함
	
	겟터는 열어두고 세터는 사용하지않거나 private로 사용
	변경이 필요할땐 메서드만들어서 사용
	
	그리고 값타입은 변경불가능하게 설계되어야함,즉 setter사용금지하고 생성자로 초기화해야함(기본생성자 protected로 막기)
	
	컬렉션은 필드에서 초기화해야 null에서 안전(=new arraylist<>();)

2.변경 감지와 병합
	준영속엔티티(영속성컨텍스트에서 빠져나온 엔티티)를 수정하려면,병합과 변경감지(더티체킹)가 있는데,병합을 사용하면 안되고,
	em.find로 찾아서 영속성컨텍스트에 박아서 수정을 해야함(변경감지(더티체킹))
	병합을 사용하면 값이 없는게(수정하지않은게) null이 될 위험성이 있기때문
	이거 여러개치기 귀찮으니까,레포지토리에서 find후 값변경하는 메서드만들어두면 편함
	
	그리고 컨트롤러에서 엔티티생성은 안하는게 좋고,트랜잭션이 있는 서비스계층에 id와 변경데이터를 전달해서(dto사용) 그걸기반으로 변경시키는게좋음
	