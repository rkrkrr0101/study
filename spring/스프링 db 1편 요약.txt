1.jdbc이해
	jdbc는,각 db밴더마다 다른 연결방식을 통일하기위해,인터페이스로 래핑해서 구현을 알아서 밴더들이 하고,사용방식을 똑같게 만든거임
	여기서 구현체를 드라이버라고 함
	물론 각 db마다 다른(특히 페이징)sql같은건 각각 맞춰줘야했음(jpa사용하면 어느정도해결가능)
	
	이 db쪽에서의 발전순서는 깡jdbc->sql매퍼->orm순으로 발전해왔음
	
	jdbc커넥션만들땐
		Connection connection = DriverManager.getConnection(URL, USERNAME, PASSWORD);
	이런식으로 커넥션연결하면됨
	이러면 드라이버매니저가,현재 등록된 db드라이버를 바탕으로 해당되는 드라이버를(그 핸들러찾는거랑똑같음,입력값으로 체크하고 가능하면 T,아니면 F) 찾음
	
	그리고 커넥션을 직접연결할땐,finally로 꼭 닫아줘야함,그리고 각각 try캐치로 묶어줘야함
	
	그리고 롬복Data쓰면 EqualsAndHashcode도 같이들어있어서,안에있는값 같으면 같은객체로 취급
	
	테스트에서 예외체크는
		assertThatThrownBy(()->repository.findById(member.getMemberId()))
			.isInstanceOf(NoSuchElementException.class);
	이렇게하면됨
	
	그리고 테스트에서의 반복성을 위해서,트랜잭션을 사용해서 롤백하는식으로 동작하게해야함(jpa기본동작)

2.커넥션풀과 데이터소스 이해
	커넥션풀은,커넥션을 미리 잔뜩 만들어두고,로직에서 그걸 하나씩 가져가서 쓰고 다시돌려놓는식으로 하겠다는것(커넥션연결지연시간 줄이려고)
	커넥션풀의 기본갯수는 보통 10개고,상황에따라 늘리면됨
	그리고 사용하고나서 커넥션을 다시 반환해버리면되는거(닫는게아님)
	
	그리고 이런 커넥션을 획득하고 반환하는걸 추상화한게 데이터소스임(자바기본)
	그런데 드라이버매니저는 이런 데이터소스 인터페이스를 사용하지않아서,저거쓰다가 바꾸면 다바꿔야하는데,그래서 스프링은 드라이버매니저데이터소스라는
	데이터소스를 구현한 드라이버매니저 구현체를 제공함
	
	추가적인장점으로,데이터소스를 생성할때만 url,아이디패스워드같은걸 넣어주면되고,사용시점엔 이미 고정된상태라서 안넣어줘도된다는 장점이있음
	즉,저런 상수들같은거에 의존하지않아도됨 사용시점에서
	
	그리고 이런 커넥션풀을 생성할땐 별도의 쓰레드에서 동작하기때문에,테스트할땐 대기시간을 주든가 해야 저거테스트는 할수있음
	뭐 진짜로쓸땐 이미 깔려잇다고 가정하고하니까 상관없겟지만
	그리고 이렇게 직접 커넥션풀 받아다쓸땐,반드시 쓰고나서 반환해줘야함(con1.close(),클로즈하면 닫는게 아니라 반환을 함)
	
	만약 커넥션풀갯수 초과하게 받아가면,앞에하나가 끝날떄까지 블락됨(대기상태)
	이러다가 타임아웃나면 예외뜸



3.트랜잭션 이해




















	