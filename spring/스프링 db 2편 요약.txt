1.데이터접근기술-시작
	dto에 기능을 꼭 붙이면 안되는건아님,잇어도 상관없고,주목적이 데이터전송용이기만하면 됨(솔직히 중요하진않아서 그냥 택배상자라고 생각하면됨)
	서비스에 인터페이스를 도입하는경우는 많지않음
	인터페이스는 구현체를 바꿀 가능성이 있을때 도입하는데,보통 서비스는 만들어두고 고정일확률이 높기때문(애초에 바뀌면안되고)
	
	dto의 위치는,소유자(실제로 그걸 넣는애)의 폴더에 넣어두는게 좋음,다른데선 그냥 참조하는거니까
	즉 리포지토리에서 생성하면 리포지토리에,서비스에서 생성하고 컨트롤러로 반환하면 서비스에 두는게좋다는거
	아니면 그냥 별도의 dto폴더를 만들어도되고(여러군데서 생성하면 걍 이렇게뺴는게 나음)
	
	그리고 인터페이스에서 구현체선택은 당연히 별도의 컨피그파일만들어서 @Configration붙이고 빈등록해주면되고
	메인에서 @Import(abcConfig.class)해주면됨
	
	@EventListener()는,해당시점에 스프링이 이 메서드를 실행해주는거
	@EventListener(ApplicationReadyEvent.class)는 스프링의 초기화가 끝나고,준비가 끝나고 실행시키는거임
	@postConstruct랑 비슷한데,포스트컨스트럭터는 aop같은게 다 처리되지않은시점에 실행되는 경우가 있음(@Transactional같은)
	그래서 이벤트리스너가 더 나음
	그리고 빈등록도 해줘야하니까,메인같은데에 빈등록해두면됨(해당클래스 생성해서리턴,return new abc();)
	그리고 scalBasePackages="패키지경로"로 특정 패키지만 컴포넌트스캔을 할수있음,기본값은 자기하위전체
	
	@Profile("abc")는,이 프로필인 경우에만 해당 스프링빈을 등록함
	이 프로필은,어플리케이션 프로퍼티에서
		spring.profiles.active=프로필명
	으로 등록할수있음
	
	이걸 사용해서 dev,prod나누는거랑,
	테스트랑 메인 나눌때 두군데서 사용가능함,
	테스트의(src/test) 어플리케이션프로퍼티에 프로파일넣어두면 그거부터읽음
	
	테스트의 경우에도 인터페이스를 테스트해서,이렇게하면 구현체를 바꾸었을때도 해당 구현체가 잘 동작하는지를 쉽게 알수있어서 좋음
	그래서 구현체의 경우,최대한 인터페이스에 없는 기능들을 추가안하는게좋음
	
	db의 식별자(id)는,
		null허용불가
		유일해야함
		변해선 안됨
	3가지를 만족해야함
	근데 이때,자연키는 사용하지않는게 좋음,정책이나 이런거의 변경에 따라 어떻게될지 아무도 몰라서 인조키를 만들어서 사용하는게 좋은데
	이때 인조키엔 오토인크리즈먼트나 uuid같은걸 선택하는게좋음
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	