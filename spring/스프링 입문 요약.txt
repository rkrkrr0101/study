1.설치
	보통 요즘 스프링은 
		http://start.spring.io
	에서 만든다고함
	저기서 디펜던시에서
		spring web(restapi나 아파치톰켓같은게 들어가있음)
		thymeleaf(html엔진인데,딴거써도된대)
	선택해서 다운받고 압축풀기
	그리고 인텔리제이에서 build.gradle를 선택하고 열면됨
	
	build.gradle는 빌드데이터들(플러그인,디펜던시등)을 나열한거
	
	H2 데이터베이스를 2.1.214 버전이상사용
	
	static/index.html에 넣어두면 저게 기본페이지임
	
	검색할때 spring.io에서 프로젝트->스프링부트->런->버전
	여기서 비슷해보이는거 찾으면됨
	사실 구글링하면나올듯 ㅋㅋ
	
	템플릿엔진을 사용하면,정적 페이지가 아닌 코드형식으로 html을 변경할수있음(리액트생각하면됨)
	
	html에서 
		<html xmlns:th="http://www.thymeleaf.org">
	한건 th(타임리프)를 선언한거
	
	컨트롤러에서(mvc에서 c,컨트롤러에도 @Controller붙여줘야함) @getMapping를 붙인 Model model을 받는 함수를 만들고,
		model.addAttribute("html변수명","변경할값")
	을 하면,해당 html페이지의 해당변수명이
		<body><p th:text="'안녕하세요. ' + ${data}">안녕하세요. 손님</p></body>
		<body><p th:text="'안녕하세요. ' + 변경한값">안녕하세요. 손님</p></body>
	이렇게 치환됨
	
	즉,톰캣이 컨트롤러가 있나 확인하고,있으면 그 컨트롤러의 매핑된 메소드를 실행시킨다음,렌더링된 html을 리턴함
	매핑된걸 스프링이 확인하는방법은,리턴값임
		resources->templates->{리턴값}.html
	을 있나 찾고,있으면 그걸 대입하는식임
	즉,컨트롤러가 리턴값으로 문자를 반환하면,뷰리졸버가 뷰를 찾아서 처리함
	
	spring-boot-devtools추가하면,html만 컴파일해주면 서버 재시작없이 view변경이 가능함
	
	
	빌드할때 빌드된 파일 위치는,프로젝트루트폴더/build/libs에 저장됨
	실행은,
		java -jar 파일명.jar
	하면됨
2.스프링 웹개발 기초
	웹개발방법엔
		정적컨텐츠(정적으로 정해진html만 뱉는방식)
		mvc+템플릿엔진(동적으로 html을 바꿔서 리턴하는식)
		api
	3가지가 있음
	
	정적컨텐츠는 그냥 static에서,파일명 그대로 접근하면 접근됨
		static/heo.html
		->localhost:8080/heo.html
		
	이때 스프링이 각 url마다 구분하는 방식은,
		1.url요청받음
		2.컨테이너에서 컨트롤러를 찾음
		3.없으면 static에서 찾음
		4.없으면 404던짐
		5.있으면 그거리턴
	
	mvc사용이유는,관심사분리가 가장 큼
	view는 html
	controller는 백엔드 컨트롤러
	model은 db
	
	스프링 mvc에서 컨트롤러는
		@Controller
	로 표시해야함
	그리고 뷰는 리소스의 templates밑에 있으면됨
	
	그리고 mvc쓸땐 템플릿엔진이 있어야하니까,html의 속성에서
		<html xmlns:th="http://www.thymeleaf.org">
			...
		</html>
	를 넣어줘야함
	그리고 타임리프를 쓰면,뒤에 값을 넣어주면
		<body><p th:text="'hello ' + ${name}">hello! empty</p></body>
	저 hello empty가 기본적으론 안보이다가,그냥 html만 열었을때 저게 표시가되는 디폴트값을 넣을수있음
	
	컨트롤p누르면 해당대상의 속성을 볼수있음
	컨트롤클릭하면 해당 대상의 위치로 넘어갈수있음
		
	mvc사용시에 루틴은
		1.url요청받음
		2.컨테이너에서 컨트롤러를 찾음
		3.모델에 키:값으로 데이터들을 담음
		3.컨트롤러의 리턴에 해당되는 view를 찾아서 모델을 던짐
		4.뷰(뷰리졸버)는 모델을 받아서 키값으로 검색해서 키값과 밸류를 치환해서 리턴함(템플릿엔진이 처리)
		
	
	api를 사용할땐,@GetMapping밑에 @ResponseBody를 넣어줘야함
	이건 리스폰스바디에 직접 내가 데이터를 넣겠다고 선언하는것+view를 찾지않고(뷰리졸버대신 http메세지컨버터가 동작)
	+만약 대상이 객체면 json으로 게터세터가 있는 내부 변수를 전부넣어서 리턴
	or 스트링이면 그냥 스트링을 리턴
	
	알트인서트=제너레이터(코드뼈대생성기),이거로 게터세터같은거 만들떄편함
	
	객체를 반환하면서,@ResponseBody가 붙어있으면,해당 객체의 모든 변수들을 json으로 뱉어내게됨
	그리고, 이 변수들은 스프링도 게터와 세터를통해 접근하기때문에 강제적으로 모든 출력하려는 변수엔 게터와 세터가 달려있어야함(자바빈,프로퍼티)
		
		
		
		
		
		
		