1.예제생성
	로그에서 시작시간을 알면 종료시간도 알수있음(둘뺴면되니까)
	
	쌩으로 로그찍을때는,하단에서 예외가 터지면,그대로 뒤에꺼가 다 무시되니 트라이캐치로 싸서 파이널리에 넣어두거나 트라이랑 캐치 각각넣어둬야함
	그리고 로그가 어플리케이션의 흐름을 바꾸면안되니,캐치에선 무조건 다시 같은예외를 던져야함
	
	필요없는건 다스킵

2.쓰레드로컬
	기본적으로 빈등록하면 따로 뭐 안해주면 싱글톤빈임
	그래서 만약 빈 내부에 뭐 값을 가지고있다면 바로 동시성문제터짐
	싱글톤은 여러쓰레드에서 공유하기때문에..
	이런 동시성문제는
		싱글톤의 인스턴스필드
		static의 필드
	등에 접근할때 발생(물론 모든곳에서 접근만하면(final이면) 상관없음)
	그래서 이런건,보통 스프링은 같은로직의 실행은 한쓰레드로 몰아주기때문에,쓰레드에 값을 저장하는식으로 해결할수있는데,이걸 쓰레드로컬이라고 함
	쓰레드로컬은,해당쓰레드만 접근할수있는 저장소임
	즉 싱글톤에서 쓰레드로컬을 사용하면,하나의 인스턴스라도 각 쓰레드별로 같은이름으로 다른 변수를 사용할수있는것
	이건 java.lang.ThreadLocal에 있음
	사용은
		private ThreadLocal< String> nameStore=new ThreadLocal<>();
		nameStore.set(name);
		nameStore.get();
	이렇게 쓰면됨
	그리고 주의해야할건,무조건 이걸썼으면 마지막에
		nameStore.remove()
	로 지워줘야함(보통 필터나 인터셉터에서 지워버리면되는듯)
	쓰레드는 생성비용이 비싸서,한번생성해서 돌려쓰는데,이미 반납한거 안에 안비워두면 다른애가 그거 그대로쓰면 바로 문제터짐


3.템플릿메서드와 콜백패턴(전략패턴포함)























