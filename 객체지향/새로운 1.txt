객체지향이란 무엇인가
	객체를 지향한다,즉 협력하는 객체들의 공동체를 만드는일
	좀 더 실제적으로는,유지보수성을 높이기위해,낮은 결합성,높은 응집도를 도메인 객체를 중심으로(비즈니스로직) 프로그램을 만드는것
	정시퇴근을 하기위해 생김
응집도는 무엇인가
	객체가 얼마나 한몸처럼 움직이는가,즉 객체에서의 책임의 갯수
	낮으면 하나수정할때 로직이 여러군데 분포해있어서 수정할때 귀찮아짐
	낮을땐 객체를 분리하는 선택을 할수있음
결합도란 무엇인가
	객체가 얼마나 외부와 연결되어있냐,즉 import의 갯수(이중에서 내가만든 로직이 특히 결합도를 높게침)
	높으면 하나수정하면 외부에서도 다 연결되어있는거,수정할때 머리아파짐
	강결합된(구현체를 의존)걸,인터페이스를 만들고 거기의존하는거로 약결합으로 바꿀수있음
객체지향을 하기위해 하기좋은방법
	책임주도개발,어려우면
		행동주도개발
		도메인이 자기일을 자기가 하게 처리,단 응집도가 낮아질거같은경우 트레이드오프생각
		테스트코드를 만든다고 생각하고,어려울지 쉬울지 판단
테스트코드를 어렵게 만드는이유
	테스트하기좋은코드=멱등성이 보장됨
	제어할수없는 외부에 의존(랜덤,현재시간)->추상화로 해결 혹은 해당부분을 생성자나 메서드의 인자로 받기,인자의 기본값설정
	외부에 영향을 주는,사이드이펙트가 있음(db접근,외부api)->추상화한다음 페이크객체주입
	
	한부분이 테스트가 어렵다는건,해당객체를 의존하는 전체가 테스트가 어려워짐->테스트하기어려운코드중 개선이 불가능한걸 최대한 바깥으로 쳐내야함
	즉 컨트롤러나 레포지토리까지 쳐내서 중앙을 지키기 or 의존성주입