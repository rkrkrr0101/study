1.들어가며
  구현기술을 사용해서 코드를 작성하는것만이 개발이 아님
  코딩과 구현기술은 개발의 일부일뿐임
  새로운 기술을 사용하는건 오히려 유지보수가 어려워질수도 있음
  구현 이외에도,프로젝트일정,요구사항,위험관리,아키텍처등 여러가지가 개발에 포함됨
  
  1.개발에 필요한것
    대략적으로 필요한 역량은
	  구현기술
	  설계역량
	  업무관리와 요구분석,공유,리드&팔로우
	임
	구현은 당연히 개발자라면 있어야하는거고,
	설계는 서비스가 변화에 대응이 쉽게만들어서 경쟁에서 쉽게 변화될수있게 해줌
	그런데 설계는 정답이 없어서 같은 구조라도 상황에따라 좋고나쁨이 달라짐,즉 경험이 많아야함
	그리고 여러 설계기법들을 평소에 꾸준히 학습하고 익혀야함
	
	또한 업무분석은 관리자만 하는게 아니고 이것도 중요함,프로젝트일정관리의 핵심이니까

2.구현기술과 학습
  1.구현기술
    당연히 구현기술은 잘 다뤄야함
	언어,프레임워크,별도프로그램(db등),클라우드,os등
	
	모든걸 다 할순없고,자기가 어떤 역할을 하는지에 따라 선택해야하는 기술이 달라짐

  2.학습대상
    너무 구현기술이 많다보니,학습할 대상을 잘 선택해야함
	이떄 기준은
	  현재 사용중인 기술
	  문제를 해결하기위한 기술
	이 두개를 잡으면 좋음
	
	일단 현재 쓰는건 어케됐든 알아야함(아무리 맘에안들어도)
	이떈 모든걸 익히려고 하지말고,필요한부분만 알고있으면됨
	스프링으로 치면 컨트롤러와 json변환,db연동과 트랜잭션처리정도만 알고있으면 기존코드를 분석,수정할수있음
	
	또한 문제해결을 위해서도 구현기술을 학습해야함
	문제는 두가지로 나뉘는데,당장 처리해야할문제와 가까운 미래에 처리해야할 문제임
	당장 처리해야할 문제는 빠르게 찾아서 기본사용방법을 익히고 적용해야함(트래픽폭주로 레디스같은거 급히도입하는 느낌)
	
	가까운 미래에 처리해야할 문제는,당장 서비스를 운영하는덴 문제가 없지만 위험신호가 관찰되고 미래에 장애가 생길게 보일때임
	이때는 poc등으로 선택한 구현기술이 문제해결에 적합한지를 증명한후에 도입해야함
	무엇보다 중요한건 기술의 유명세에 휘둘리지않는것
	유명한 기술이라고 도입하는게 아니라,현재 문제를 해결할수있어야함
	새로운 기술의 도입은 무조건적으로 복잡도가 올라가기때문임
	
	어떤문제든 즉시 알맞은 구현기술을 찾는건 쉽지않음,그래서 평소에 구현기술을 탐색하고 학습해두는게 중요함

  3.기술파기
    구현기술 습득은 쉬운영역임,단 모든부분을 제대로 이해하긴 어렵지만,이렇게까지 할필요는 없음
	어짜피 검색해서하면되니까
	처음 접하는 기술을 익힐땐 핸즈온이나 튜토리얼문서로 빠르게 감을 잡고,필요할때마다 조금씩 더 깊게 학습하는식으로 나아가면됨
	굳이 내부동작원리같이 깊이 이해할필요는 없고,필요해지면 찾으면됨
	
	가장 중요한건 더 나은방법을 찾으려고 노력해야한다는것
	방법을 잘 모르거나,구현하기 어려운 문제가 생기면,해결하기위한 더 나은 방법이 있는지를 찾아야 기술이 발전됨
	더 나은방법을 찾지않고 기존방법만 답습하면 기술역량을 높일기회가 찾아오지않음

  4.학습 전략
    기술은 흐름이 계속 바뀜
	주력기술을 가장 집중적으로 학습하고(주력기술:당장 혹은 가까운 미래에 경제적이익을 얻는데 필요한기술,시장점유율이 높은 기술)
	주력기술도 모든 대세기술을 알필요는 없고,한 역할을 해결하는게 필요한 기술을 집중적으로 익혀야함
	
	어떤 기술에 흥미가 생겨서 학습할순있지만,그 기술을 주력으로 삼을지는 유심히 고민해야함
	또한 여러 기술을 꾸준히 탐색할필요도 있음
	깊게 파진 말고 한번 써보는느낌정도로만 해도 왜 유명해지는지를 이해하려고 노력하면,그걸 도입해야할떄 쉬워지고 미래경쟁력을 유지할수있음
	스터디참가도 기술탐색에 괜찮은방법이고,뉴스레터나 블로그를 구독하거나 하는것도 괜찮음

  5.유행에 상관없는 구현기술
    동시성처리 지식이나 http지식,인덱스 설계지식같은 유행과 상관없는 기초지식도 중요함
	이런것들은 1년에 1개이상 학습하는게 좋음

  6.구현기술 적용
    구현기술을 잘못 적용하면 조직에 큰 부담을 줄수있음
	기술을 도입할땐 보수적으로 고민하고
	  신뢰구축
	  함께할 동료
	  타당성
	  점진적 적용
	  시장상황
	을 신경써야함
	
	먼저 뭘 도입하려면 신뢰자본을 써야함,그러니 신뢰도를 쌓아야함
	또한 뭘 할땐 새로 적용할 기술에 대해 함께 논의하고 공감대를 형성할 동료가 꼭 필요함
	그리고 해당 익숙하지않은 기술을 적용해야하는 이유가 타당해야함,즉 구현기술로 해결하고자 하는 문제가 분명해야함	
	또한 현재 동작하는 서비스나 시스템에 새 기술을 도입할땐 점진적으로 적용해야함,한번에 다바꾸려는건 위험함
	중요하지않은 부분부터 먼저 적용해서 안정성을 검증해야함
	마지막으로 해당기술에 능숙한 인력을 원활히 채용할수있어야하고,동료의 이력도 신경써야함(이력서에 쓸만한거로)

  7.주의할점
    모든기술을 능숙하게 다루는거보단 특정기술을 잘 사용하는게 나음
	또한 잘해야하는게 구현기술만이 아님,개발은 넓음

3.소프트웨어 가치와 비용
	
































