1.깨끗한 코드
	처음부터 코드를 깔끔하게 짜둬야 생산성저하가 덜일어남
	결국 코드짤때 하는거중 90퍼는 다른코드를 보는거라,이래야 효율이좋음

2.의미있는 이름
	이름은 의도가 분명하게 이름을 지어야함
	즉 함수나 변수의 이름만 봐도,이게 뭐하는앤지,왜있는지,어떻게 사용할지가 주석없이 바로 보여야함
	즉
		int d;//이걸
		int fileAgeInDays;//이런식으로 명시적으로 적어야함
	즉 변수에있어서는 측정하려는값과 단위를 표현하는 이름이 필요함
	
	그리고 코드맥락이 변수명에 드러나야함
	a,b같은거 대신 gameBoard같은 명시적인 이름을 사용해야,얘가 이거로 뭘하려고하는지가 바로보임
	
	그리고 코드에 잘못된 정보가 있으면 안됨
	즉 널리 쓰이는 의미가 있는 단어를 다른의미로 사용하면안됨
	즉 실제 list타입이 아니면 accountList대신 accounts나 accountGroup 이런식으로 적어야함
	
	그리고 의미없이 비슷한이름을 가진애가있으면 헷갈리니까,이름이 비슷하려면 같은일을 하는친구여야함

	변수명에는 의미없는 불용어나 단숫숫자나열을 붙이면안됨
	a1,a2,a3이런거 대신 명시적인 이름을 붙여야하고
	Product가 있다고 ProductData라는 새로운 클래스를 만들면,의미가 중복됨
	즉 해당 이름이 이미 선점되어있으면,그안에 넣거나 그걸쓰거나,둘이 구분되는 이유를 찾아서 그걸 이름에붙여야함
	
	불용어의 경우엔 어짜피 의미가없으면 걍 지우는게맞음
	최대한 의미가 드러나는 가장 짧은 이름을 사용해야함
	
	그리고 해당일을 하는 함수명은 하나여야함
		getActiveAccount();
		getActiveAccounts();
		getActiveAccountInfo();
	이렇게 3개가 같이있으면,뭘써야할지 모르게됨
	
	그리고 이름은 발음하기 쉬운이름이 좋음 genymdhms대신 generationTimestamp같은이름을 사용
	
	그리고 검색하기 쉬운 이름을 사용해야함
	그래서 상수를 언더바를 사용해서 대문자로 정의하는것
	7같은건 찾기힘들지만 상수는 찾기쉬움
	이름길이는 검색스코프의 크기에 비례해야함

	
	요즘은 타입을 이름에 명시할필요가 없음,어짜피 ide가 다처리해주니까
	그래서 헝가리안이 죽기도했고
	멤버변수에 m_을 붙일필요도없음
	애초에 저런거 구분할필요가 없을정도의 크기로 함수가 나와야함
	
	그리고 인터페이스와 구현클래스에 이름을 붙일떄도,딱히 구분지을필요는없음
	어짜피 인터페이스를 구현클래스처럼 다뤄야하는데,쓸데없는 정보를 줄필요는 없음
	
	읽는사람이 읽으면서 변수이름을 치환해서읽어야하면 그건 잘못된것임
	문자하나만 사용하는 변수이름은,반복문을 제외하곤 사용하면안됨

	
	클래스이름과 객체이름은 명사나 명사구가 적합함
	Manager,processor,Data,Info같은 단어를 피하고,동사는 사용하지않음
	
	메서드이름은 동사나 동사구가 적합함
	postPayment,deletePage,save 이렇게 동사+대상이나 동사로만 구성되는게 적절함
	그리고 관례상 접근자엔 get,변경자엔 set,조건자는 is를 붙임
	
	생성자를 오버로드해야하면 정적팩토리메서드를 사용하는게 좋음
		Complex fulcrumPoint=new Complex(23.0)//이거보단
		Complex fulcrumPoint=Complex.FromRealNumber(23.0)//이게나음
	생성자사용을 제한하려면 private를 걸면됨
	
	이름이 너무 기발하면,생각이 비슷한사람만 이름을 기억함
	그래서 재밌는이름보다 명료한 이름을 선택해야함
	
	한개념에 한단어를 사용해야함
	즉,어떤값을 가져오는거에 get,fetch,retrieve등 제각각 부르면 혼란스러우니까,컨벤션을 정해 하나로 통일해야함
	즉 해당일을 하는거면 그단어가 들어가는식으로 통일해야함
	
	한단어를 두가지목적으로 사용하면안됨
	다른곳에서 이미 다른용도로 사용하고있는거면,해당용도가 아니면 그걸 사용하면안됨
	예를들어 숫자나 문자 더하는데서 add를 사용하고 있었는데,리스트에 값을 추가하는데에 add를 사용하면안됨
	이때는 insert나 append같은 다른단어를 사용해야함
	
	코드를 읽을사람도 프로그래머니까,이쪽단어들(패턴이름,알고리즘이름등)은 사용해도됨
	단 문제영역(도메인영역)은 정 없으면 가져오는데,가능하면 다른거로 해결하는게좋음
	
	의미있는 맥락을 추가해야함
	스스로 의미가 분명한애들은 상관없는데,안되는애들은 클래스나 함수같은데 넣어 맥락을 부여해야함
	그래도안되면 마지막수단으로 접두어를 붙이면됨
	즉 state가 street랑 같이있으면 주 지만,다른곳에있으면 상태일수 있는거처럼,다른친구들(다른변수들)이랑 묶어서 알아볼수있게 해주는거임
	
	불필요한 맥락을 없애야함
	모든곳에서 동일하게 사용되는 접두어나 접미어는,아무의미없이 이름만 길어지니까 필요없음
	그리고 클래스이름은 짧아지고,인스턴스이름은 길어지는게 일반적임
	Address와 accountAddress같은느낌
	
3.함수		




























































































