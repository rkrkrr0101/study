1.네트워크

1.네트워크 구성도
	홈의 네트워크는 인터넷-모뎀-공유기-단말을 거치지만,데이터센터에선 안정적이고 빠른 서비스제공을 해야하기때문에
	예전엔 3계층구성을 했지만,요즘은 2계층 스파인-리프 구조를 쓴다고함
	스파링리프는 서버간 통신이 늘어나는 요즘에 적합하대
	
2.프로토콜
	프로토콜은 예전엔 bit단위로 진짜 세밀하게 쪼개서썻지만,요즘은 그냥 문자프로토콜로 대충막보냄,http같은거
	보통 tcp/ip는 프로토콜이라고 부르지않고 프로토콜스택이라고 부름
	tcp와 ip는 서로 다른층에서 동작하는 프로토콜인데,그렇게 두개이상을 묶어서쓸떄 프로토콜스택이라고 부름
	실제로 tcp/ip말고 udp,http,ftp등 여러 애플리케이션 레이어 프로토콜이 있음
	
	tcp/ip는 4개부분으로 나눠짐
	물리부분인 이더넷
	데이터가 목적지를 찾아가게해주는 네트워크층
	잘린패킷을 데이터형태로 조립하게 도와주는 전송계층과 애플리케이션계층
	
	
3.osi7계층과 tcp/ip
	osi7계층은 그 피지컬계층부터 애플리케이션계층까지있는 그 네트워크시간에 했던 그거임
	이렇게 각 계층마다 동작하는 방식으로 네트워크를 이해할수있고,각 계층별 프로토콜로 네트워크 구성요소를 모듈화할수있음
	
	osi7계층은 상위계층과 하위계층으로 나뉘는데
	상위계층(애플리케이션계층)은 애플리케이션부터 세션까지
	하위계층(데이터플로계층)은 피지컬부터 트랜스포트까지로 나눠짐
	
	의미하는대로 하위계층은 데이터를 잘 전달하는 역할을 하고,상위계층에선 하위계층을 신경쓰지않고 데이터를 표현하는데 초점을 맞춤
	그래서 앱개발자들은 하위계층을 신경쓰지않고,네트워크엔지니어는 상위계층을 신경쓰지않음
	
	근데 요즘은 tcp/ip과 이더넷으로 네트워크가 이루어져있어서,tcp/ip모델도 있음
	tcp/ip모델은 네트워크액세스,인터넷,트랜스포트,애플리케이션 계층으로 이루어져있는데
		네트워크액세스:피지컬과 데이터링크층
		인터넷:네트워크층
		트랜스포트:트랜스포트층
		애플리케이션:세션,프레젠테이션,애플리케이션 층
	이라고 보면됨
	
	
4.osi7계층 이해
	피지컬층(1):
		피지컬층은 물리계층으로 물리적으로 전기신호를 전달하는데 초점이 맞추어져있음
		얘가 하는일은 들어온 전기신호를 잘 전달하는게 목적이고,전기신호가 들어오면 그걸 재생성해서 내보냄,주소같은개념도 없어서 모든 포트에 같은신호를 전달함
		여기에 속하는 장비는,허브,리피터,케이블,커넥터,트랜시버,탭등이 있음
		허브와 리피터는 통신중재장비이고,케이블,커넥터는 케이블,트랜시버는 랜카드와 케이블연결장치,탭은 전기신호를 복제해줌
		
	데이터링크층(2):
		데이터링크층은 전기신호를 모아서 데이터형태로 바꿈,얘는 전기신호의 전달보다,주소정보를 정의하고 정확한 주소로 통신이 되게하는게 목표임
		얘는 출발지와 도착지주소를 확인하고 내게보낸게 맞는지,내가처리해야하는지에 대해 검사하고 데이터처리를 수행함
		여기서 주소는 ip가 아니라 맥주소임
		
		여기선 전기신호를 모아 데이터형태로 처리하므로,데이터에러를 탐지할수있음
		그리고 데이터전송시엔,주소체계가 생긴다는건 누가보낸건지 알수있다는거니까,
		무작정 데이터를 던지지않고,쟤가 받을수있는지부터 먼저 보내고 응답받고 데이터를 보냄,이걸 플로컨트롤이라고 함
		여기에 속하는 장비는 랜카드와 스위치임
		두장비 모두 맥주소를 이해할수있고,스위치는 맥주소를 보고 통신할 포트를 지정해 내보냄
		
		즉 순서는
			전기신호를 데이터형태로 만들고,목적지출발지 맥주소를 확인후,목적지주소와 내맥주소가 같으면 처리하고 다르면 폐기
		랜카드에는 고유맥주소가 있는데 이걸로 목적지를 처리함
		aa맥주소에 3포트면 aa:3으로 보내는식
		스위치는 단말이 어떤맥주소인지,연결된포트는 어느것인지를 알수있음,이데이터를 통해 단말이 통신할때 적절한단말과 포트로 포워딩해줌
		1계층이랑 다른건 1계층이였으면 브로드캐스트로 전역에 뿌렸을거임,그러면 전장비에서 동시에 하나의통신밖에 처리못함
		얘는 대신 한군데만 보내니까 여러장비에서 동시에 처리가능
		
	네트워크층(3):
		얘는 ip주소를 정의함
		통신을할땐 두가지 주소가 사용되는데,물리적인 mac주소와 논리적인 ip주소임
		맥주소와 달리 ip주소는 사용자가 환경에맞게 변경해 사용할수있고,네트워크주소와 호스트주소로 나뉨
		3계층을 이해할수있는 단말은 네트워크주소정보로 자기가 속한 네트워크와 원격지 네트워크를 구분할수있고,원격지를 어떻게가는지 경로지정이 가능
		ip주소는 앞2자리와 뒷2자리로 구분되는데,앞이 네트워크 뒤가 호스트주소임
		
		3계층의 장비는 라우터임
		라우터는 3계층에서 정의한 ip주소를 이해하고 그 주소로 최적의 경로를 찾아주고 그경로로 패킷을 전송함
		
	트랜스포트층(4):
		여기는 상위층이나 하위층으로 갈때,여기서 패킷이 다 왔는지,아니면 보낼때 빼먹은게 없는지를 확인함
		여기서 tcp와 udp가 나눠짐
		얘가 패킷을 분할할때 패킷헤더에 보내는순서와 받는순서를 적어서 통신하므로 패킷이 유실되면 다시보내라고 요청할수있고,순서가 바뀌어도 바로잡을수있음
		보내는순서가 시퀸스번호고 받는순서가 ack번호,그리고 장치내 앱을 구별하는 포트번호로 상위 앱을 구분함
		
		여기서 동작하는 장비로,로드밸런서와 방화벽이 있음
		이장비들은 포트와 시퀸스,ack번호정보로 부하를 분산하거나 보안정책을 수립해 패킷을 통과,차단하는 기능을 수행함
	
	세션층(5):
		얘는 양 끝단의 프로세스가 연결을 성립하도록 도와주고,연결이 안정적으로 유지되도록 관리하고 다끝나고 연결을 끊는 역할을 함
		우리가 말하는 세션을 관리하는게 역할인데,얘가 tcp/ip세션을 만들고 없애는 책임을 짐
	프레젠테이션층(6):
		얘는 표현방식이 다른 앱이나 시스템간의 통신을 돕기위해(무슨 cpu마다 전치하고 머시기해서 데이터저장하던걸 합치던 그거)
		그걸 하나의 통일된구문으로 변환함,번역기라고 보면됨,그래서 앱층에서 이런걸 신경쓸필요가없게해줌
	애플리케이션계층(7):
		얘는 직접적인 ui나 사용자입출력,http같은 프로토콜이라고 보면됨
		
	
	
	계층별 주요 프로토콜로는
		애플리케이션:http,telnet,ftp
		프레젠테이션:tls,afp,ssh
		세션:pptp,l2tp,ssh
		트랜스포트:tcp,udp,sctp
		네트워크:ipv4,ipv6,nat,vrrp,라우팅 프로토콜
		데이터링크:ieee
		피지컬:케이블들 통신프로토콜
	이 있음
	
	
	
5.인캡슐레이션 디캡슐레이션
	보통 상위-하위,하위-상위로 보낼때,데이터를 쪼개서 캡슐(패킷)에 넣고 보내고,그캡슐을 열어서 데이터형태로 다시 만드는데
	이걸 인캡슐레이션(보낼때),디캡슐레이션(받을때)라고 함
	
	현대 네트워크는 대부분 패킷기반 네트워크임
	그래서 데이터를 패킷으로 쪼개서 보내는데,그래서 하나의 통신이 회선전체를 점유하지않고,
	모든패킷이 동일한 취급을 받으며 여러단말들이 동시에 통신할수있게 해줌
	그래서 데이터를 패킷으로 쪼개고,패킷을 다시 합쳐서 결합하는걸 하는거임
	
	앱에서 데이터를 데이터플로층으로 내려보내면서 패킷에 데이터를 넣을수있게 분할하는데,이걸 인캡슐레이션이라고 함
	네트워크 상황에 따라 적당한크기로 쪼개고,4계층부터 4,3,2층은 자기층에서 필요한 헤더를 붙여넣는데,이건 문자가 아닌 비트로 적음
	그리고 피지컬층에서 전기신호로 바꿔서 보내는거임
	
	그리고 받는측에선 디캡슐레이션을 하는데,전기신호를 데이터로 바꾸어서 2층으로 올리고,
	2층에서 헤더를 확인해 맥주소를 보고 자기꺼가 맞는지 확인하고 맞으면 3층으로올림,이때 2층정보는 필요없으니 제거하고 올림
	3층에선 2층처럼 헤더를확인해 ip를 확인하고 맞으면 헤더를 제거하고 4층으로 올림
	4층도 똑같이 데이터를 상위층으로 헤더를 제거하고 올려보냄
	
	이건 2가지흐름으로 볼수있는데,
		인캡슐레이션 디캡슐레이션으로 데이터전송과정
		각게층헤더를 통해 송신자와 수신자간에 같은계층에서의 통신
	각 계층에서 인캡슐레이션 과정에서 수행했던거처럼,현재계층에서 추가하는 헤더는,반대편 같은층에서 확인할 정보임
	
	헤더들은 넣는정보가 많은데,다알긴 어렵고 제일중요한건
		현재층에서 정의하는 정보
		상위프로토콜 지시자
	임
	현재층에서 정의하는 정보는 앞에서 말했던 그층에서 쓸 정보고,
	상위프로토콜 지시자는,디캡슐레이션과정에선 상위프로토콜이 뭔지 모르면 어떤 프로토콜로 해석해야할지를 모름
	그래서 인캡슐레이션과정에서,자기보다 한단계상위단의 프로토콜을 현재단에 기입하고,디캡슐레이션에서 그걸 해석해서 그쪽으로 올려줌
	
	여기서 유명한게
	tcp포트번호들임
		20,21:ftp
		22:ssh
		80:http
		443:https
	리눅스에서 기본포트들임,http쪽으로 맨날 통신하던거
	
	층마다 가지고있는건
		4층: 포트번호
		3층:프로토콜번호
		2층:이더타입
	을 가지고있음,보면알겠지만 현재단보다 한단계높은정보들
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	