벽돌과 사다리를 써서 가장 멀리가기
현재위치보다 다음이 낮으면 그냥갈수있고,높으면 차이만큼 벽돌을 사용하던지,사다리(폭탄)를 털면 넘어갈수있음
즉 벽돌과 사다리선택을 하라는것

사다리를 제외하고 어디까지 갈수있나 확인한다음에,가장큰값을 사다리를 써서 제거하고 어디까지갈수있나 확인하고 이걸 사다리없을떄까지 반복?


class Solution {
    fun furthestBuilding(heights: IntArray, bricks: Int, ladders: Int): Int {
        fun canReach(to: Int) :Boolean {
            val diffs = Array<Int>(to) { i -> heights[i+1] - heights[i] }
            Arrays.sort(diffs, Comparator{ a,b -> if(b>a) 1 else if (b<a) -1 else 0 } )
            var lad = ladders
            var br = bricks
            for (d in diffs) {
                if (d < 0) return@canReach true
                if (lad > 0) lad--
                else if (br >= d) br = br - d
                else return@canReach false
            }
            return@canReach true
        }
        var lo = 1
        var hi = heights.lastIndex
        var max = 0
        while (lo <= hi) {
            val mid = lo + (hi-lo)/2
            if (canReach(mid)){
              max = maxOf(max, mid)
              lo = mid + 1   
            } else hi = mid - 1
        }
        return max
    }
}