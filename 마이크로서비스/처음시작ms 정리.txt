1.마이크로서비스란
	마이크로서비스는 단일앱을 작은규모의 서비스조합으로 나누고,서비스끼리 api를 사용해 통신하는식임
	이거의 장점은,순서대로 동작하는 작업도,api로 어떻게 들어올지만 정해두면 거기에 맞춰서 개발할수있어짐
	
	마이크로서비스를 할때 주의점은,선택하고 결과는 오랜시간이 지나야 나오기때문에 신중해야함
	그렇다고 계속 고민만 하고있을수는 없음
	그래서 사용하는게 ADR임
	
	이건 아키텍쳐 결정 기록이라고 하는데
	목표,대안,선택,영향을 다 나열하고 적는것
	
		목표는 이루고자 하는 목표(해결할문제)와 제약사항등 문제를 나열
		대안은 내가고를수있는 선택지
		선택은 내가 고른 대안
		영향은 선택에 따라 일어난일
	이걸 전부 문서화하는것(깃헙의 이슈랑 비슷함)
	
	
	
2.마이크로서비스 운영모델설계
	운영모델은 사람,프로세스,도구의 집합이고 소프트웨어를 구축할때 수행하는 모든 의사결정과 작업에 중요한 영향을 미침
	운영에서 가장 중요한건 사람임
	
	그래서 마이크로서비스팀의 인원수도 중요함
	크면 의사소통에 많은시간이 필요하고,너무작으면 일손이 부족함
	대충 8명정도로 자르는듯

	그리고 이렇게 작게자르면 팀의 갯수가 많아지고,여기서 또 의사소통땜에 시간지연되면 안됨,그래서 각팀은 가능한 독립적으로 돌아가야함
	그렇다고 완전히 독립적이면,어짜피 똑같이필요한걸 모든곳에서 만들어야하기떄문에 효율성이 떨어짐,그래서 적당히 실험해보면서 조율해야함
	1.팀 토폴로지
		팀토폴로지는 팀간 일하는 방식에 중점을두고 설계에 대해 이야기하는방식
		
		1.팀유형
			마이크로소프트의 핵심개념중 하나는 팀 유형임
			이건 조직간 의사소통관점에서 팀의 성격을 설명함
			여기에 있는 팀유형은
				스트림정렬
				활성화
				난해한 하위시스템
				플랫폼
			이 있음
			
			스트림정렬은 전달가능한 작업을 소유하고 실행함
			이팀의 주요특징은 비즈니스조직과 관련된것을 지속적으로 전달함,즉 구축한걸 직접 운영하라,만든곳에서 제품을 변경하고 개선함
			
			활성화는 다른팀의 작업을 지원함,해결사같은곳임
			
			난해한 하위시스템은 암호화같은 어려운거나 해결하는데 오래걸리는걸 전문으로 함
			
			플랫폼은 활성화처럼 다른팀의 작업을 지원하는데,여기는 사용자의 역할을 해서 qa를 해줌
			그러니까 자기자신말고 나머지 모두가 플랫폼이라고 볼수있음(자기가만든걸 소비하니)
		
		2.상호작용모드
			각 팀간에는 조정비용이 가능한 작아야함,
			그래서 상호작용도 진짜 서로 같이 일을 하거나(협력),
			다른팀이 원하는 결과를 줄수있게 하거나(촉진),
			api를 만들어서 공개하거나(xaas)
			
			이 3가지가 있음
		
	2.팀 토폴로지 설계
		팀 토폴로지는 팀 조정에 대해 이야기할수 있는 언어임
		얘는 시각적 표현으로,다이어그램을 사용해 표현함
		
		기본적으로 팀 설계와 토폴로지를 만들기위해
			시스템설계팀 구성
			마이크로서비스팀 템플릿 생성
			플랫폼팀 정의
			활성화팀 난해한 하위시스템팀 생성
			주요 소비자팀 추가
		로 순서대로 하면됨
		
		1.시스템설계팀 구성
			시스템 설계팀은 시스템비전과 행동을 구체화할수있는 사람을 그룹으로 구성함
			이팀의 책임은
				팀구조 설계:팀들을 설계함
				표준,인센티브,가드레일 설정:빡빡한 규칙말고 표준적으로 이렇게처리하고,이렇게하면 좋다,이렇게는 하면안된다 식의 간단한 규칙을 만들어야함
				지속적인 시스템 개선:팀설계와 규칙들을 측정하고,개선할수있게 관리해야함
				
			이런것처럼 팀책임은 전부 문서화해두는게 좋음 
			
		2.팀 템플릿 구축
			업앤러닝모델에선 단일팀은 여러 마이크로서비스를 소유할수있음
			여기서 중요한건,한 마이크로서비스는 책임이 한 팀에만 있어야함(소유권은 한팀에있어야함)
			
			팀 템플릿은 클래스라고 보면됨,이거대로 대충만들고 오버라이드해서 약간 수정하는식
			여기서 정해야할건
				팀유형
				팀규모
				책임
			임
			책임은 여러개를 소유할수있고,팀규모는 팀의 규모 팀유형은 팀의 유형임
			
			그리고 다이어그램에서 서로 붙어있으면 서로 상호작용이 일어난다는것
		3.플랫폼팀
			플랫폼팀은 클라우드플랫폼팀으로 쿠버네티스나 aws등을 사용해서 배포하는걸 지원함
			이팀의 책임은 네트워크 인프라설계및 개발(iac),앱 인프라설계및 개발(쿠버네티스),새환경을 빌드하기위한 스크립트제공(쉘스크립트+도커),업데이트
			가 있음
			
			이팀의 책임중 핵심은 제공한 인프라를 업데이트하는것임
			이팀은 마이크로서비스팀에 xaas서비스모델을 구현함
			
		4.활성화와 난해한 하위시스템팀
			이팀들은 핵심은 아니고,추가로 필요한것들을 처리함
			주로 전문릴리즈팀(프로덕션에 마이크로서비스를 릴리즈함)이 있음,이건 난해한 하위시스템팀임
			
			얘는 다이어그램에 마이크로서비스팀 위에 작은사각형을 그리고 거기넣음

		5.소비자팀
			소비자팀들은 모바일앱개발,웹개발,서드파티조직들이나 api사용자들임
			api팀은 마이크로서비스를 api로 다른개발팀에 노출하는 책임을 맡고있음
			예를들어 모바일앱팀은 api팀에서 만든 api로 상호작용을하지,마이크로서비스를 직접호출하지않음
			
			그래서 마이크로서비스팀이 api팀에 xaas로 상호작용을 함
			




3.seed(s)프로세스



























































































