1.체인(chain)에 대한 이해 : 기본 LLM 체인 (Prompt + LLM) | 멀티 체인
  기본체인이란 프롬프트와 llm이 결합되어있는 구조를 말함
  즉 프롬프트로 사용자의 입력을 받고({name}은 몇살입니까? 이런식),
  입력된 지시문을 llm에게 전달해주고,
  그 지시문을 통해 llm이 질문에 대한 답변을 만드는 구조가 기본체인임
  
  체인으로 나온 응답은 어플리케이션으로 반환되고,이 응답을 직접 사용할수도,생성된 텍스트만 추출할수도,요약할수도 있음
  
  랭체인코어에서 ChatPromptTemplate를 사용해서 시스템메시지와 유저메시지를 분리해서 사용할수있음
  구현적으로는 시스템 유저 분리보단 해당 키값으로 파싱해서 넣는느낌에 가깝지만
  
  그리고 최종출력에서 텍스트만 추출하는 파서가 StrOutputParser()임
  그래서 체인 구성은
    chain=prompt | llm | output_parser
  이런식으로 구성하면됨
  그리고
    chain.invoke("input":"질문")//input는 질문의 키값을 넣으면됨
  이런식으로 사용하면,프롬프트를 키값으로 수정하고,llm에 던지고,output_parser로 출력을 가공해서 리턴함
  
  멀티체인은 기본체인을 하나가 아니라 두개이상 연결해서 사용하는걸 말함
  그래서 좀 더 복잡한 작업을 할수있어짐
  즉 체인1에서 출력한 값을,체인2에 입력값으로 사용해서 최종출력을 뽑아내는식임
  이건
    chain2= {"eng_word":chain1} | prompt2 | llm | output_parser
	chain2.invoke({"kor_word":"미래"})
  이런식으로 구성하면 chain2를 실행하기전에 먼저 chain1이 실행되고,그 결과물이 "eng_word"에 담겨져서 prompt2로 전달되는식으로 체인이 일어남
  
2.프롬프트(prompt) 만들기 : Prompt Template 이해 및 적용  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
