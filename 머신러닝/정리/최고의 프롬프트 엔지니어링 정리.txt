1.머신러닝과 딥러닝의 개념
  스킵
2.llm 새로운 시대의 개막
  스킵
3.llm,특이점의 시작
  스킵
  
4.프롬프트 엔지니어링이란
  1.프롬프트 엔지니어링
    프롬프트 엔지니어링은 ai로 원하는 결과를 생성하기위해 컴퓨터와 대화하는 방법임
	중요한건 어떻게 질문을 하느냐임
	오늘날씨 어때 보단 오늘 서울날씨어때,오늘 오후 4시쯤 기온이 어때라는 질문이 더 원하는대답을 받기쉬움
	이렇게 좋은질문이 좋은 대답을 얻는다는게 프롬프트 엔지니어링의 기본원칙임

  2.프롬프트 엔지니어링의 대표적인 다섯가지 방법
    가장 기본적인 방법은 제로샷 프롬프팅임
	이건 그냥 llm에게 아무 데이터나 예시를 주지않고 특정 작업을 수행하게 지시하는것
	즉 
	  이 문장을 한국어로 번역해줘
	  where is my girl 
	이렇게 하는거임
	이러면 사전에 훈련된 지식만으로 번역을 시도함
	이러면 결과는 나오지만 정확도가 높지않고 모호하거나 부정확한 대답을 내놓을 가능성이 높음
	그래서 더 나은 성능을 위해서는 작업을 지시할떄 추가정보를 제공할 필요가 있음
	
	원샷 러닝은 명령을 내릴때 예시 한개를 같이 제공하는 방식임
	  이 문장을 한국어로 번역해줘
	  예시:this is an apple=>이것은 사과입니다
	  where is my girl 
	이렇게 하는거임
	즉 ai에게 작은 단서 하나를 줘서,명확한 방향성을 제시해주는것
	
	퓨샷 러닝은 예시 2~3개를 같이 제공하는 방식임
	이러면 원샷러닝보다 좀 더 정확하게 이해하고,이건 데이터가 부족하거나 특정 작업에 대한 사례가 많지않을때 특히 유용함
	ai는 제공된 몇가지 예시를 분석해서 패턴과 규칙을 추출하고,이걸기반으로 더 넓은 범위의 작업을 수행할수있음
	
	cot(생각의사슬)은 복잡한 수학문제를 풀기위해 문제를 쪼개어 단계적으로 푸는것과 유사함
	llm에게 문제해결과정에서 따라야할 생각의 단계나 논리적 순서를 제시하면,이과정에따라 문제를 분석하고 각 단계를 거쳐서 최종해답에 도달함
	이건
	  5개의 사과가 있는데 2개의 사과봉지를 더 샀어,사과봉지에는 3개의 사과가 들어있을때 총 사과의 갯수는?
	  5개가 처음에 있었고,3개의 사과가 들어있는 사과봉지가 2개 있으니 5+6=11,정답은 11
	  레스토랑에서 20개의 사과가 있었는데 점심을 만들면서 10개를 사용하고 6개를 더 샀으면 총 사과의 갯수는?
	이런식으로 문제 하나를 풀어주고 궁금한 문제를 말하는 방식임
	이 방식의 핵심은,ai가 단순히 결과를 도출하는게 아니라,문제해결과정에 필요한 논리적 사고를 모방하게하는것
	이건 문제를 해석하고 주어진 해결책을 사용하는등,생각하는방법을 배우게함
	cot는 복잡한 문제해결과 추론을 요구하는 작업에 유용하고,ai의 이해력과 추론능력을 크게 향상시킬수있음
	
	제로샷cot는 cot와 비슷하지만,문제해결과정에서 내가 예시를 주지않고,문제를 주고 천천히 생각해보라는식으로만 지시함
	이건
	  레스토랑에서 20개의 사과가 있었는데 점심을 만들면서 10개를 사용하고 6개를 더 샀으면 총 사과의 갯수는?
	  단계별로 생각해 봅시다
	이런식으로 llm이 스스로 문제를 분석하고 사고과정을 단계적으로 작성해가면서,자신의 사고과정에 따라 해답을 도출하는 방식임


  3.기본적인 프롬프트 구성
    프롬프트 엔지니어링은 실험적인 방법론이라 한번 그럴듯한 결과를 내고 끝내는게 아닌,
	원하는 결과를 정확히 의도한대로,항상 일관되게 만드는게 목표임
	
	가장 기본적인 프롬프트의 구성은
	  답변을 위해 필요한 적절한 컨텍스트 제공
	  원하는 결과 추출을 위한 프롬프트 작성
	  결과물의 형식을 지정
	이렇게 구성됨
	
	컨텍스트는 ai가 답변해야하는 정보에 관련된 로우데이터를 텍스트로 제공함,환각방지+정확한 응답 생성
	그리고 구체적으로 원하는 결과를 얻기위한 지시(프롬프트)를 하고(1988년 서울올림픽의 금메달 순위를 추출해줘)
	마지막으로 정보의 가독성과 처리용이성을 위해 답변의 형식을 지정하면됨(금메달 순위는 숫자목록으로 작성해줘)
	
	이렇게 프롬프트는 3단계로 작성함,이렇게만 해도 원하는형태의 정보를 정확하게 얻어낼수있음

  4.프롬프트 엔지니어링 원포인트 레슨
    프롬프트만 주고 데이터를 생성하면,이건 잠꼬대에 가깝고 정확한 정보가 아닐 가능성이 높음
	중요한건 사용자가 답변을 얻기위해 사전에 어떤 문맥,즉 컨텍스트를 제공하냐임
	컨텍스트는 llm이 질문을 이해하고 그에 맞는 답변을 생성하는데 필수적임
	따라서 사용자는 질문의 배경,관련정보,원하는 답변의 세부사항을 명확히 제시해서 더 정확하고 관련성 높은 답변을 얻을수있음
	
	채용을 위한 예상면접질문을 만드는 llm을 만든다면,공고의 회사의 핵심가치,비전,복지등에 관한 정보등을 제공해야함
	그렇지 않는다면 추상적이고 일반적인 답변만 오게됨(즉 회사의 특정요구사항이나,지원자만의 특별한 역량을 깊이있게 알아보기엔 충분하지않음)
	반면 양질의 컨텍스트를 제공하여 면접질문을 요청하면,훨씬 더 구체적이고 목적에 맞는 질문을생성함
	
	게다가 프롬프트 엔지니어링 과정에서 생성한 정보는 다시 새로운 컨텍스트가 되고,그래서 사용자가 원하는 결과를 더 정교하게 만들어낼수있음
	이게 인컨텍스트 러닝임
	즉 처음에 컨텍스트를 넣어서 질문하고,거기에 대한 답변을 하고,다시 질문을 받고..이걸 만족스런 수준이 될떄까지 반복하는것
	또한 답변을 받는것도 다시 답변하는 llm을 만들어서 붙여버리면됨
	
	프롬프트 엔지니어링에서 가장 중요한건,생성된 답변 자체가 아니라 사용할 정보를 조합하고 응용하는 과정임
  
5.컨텍스트를 가져오는 기술-벡터 서치  
  1.임베딩
    llm에서 각 단어나 문장등은 전부 실수배열로 바뀌어서 저장됨
	이걸 임베딩이라고 하고,텍스트를 숫자로 바꾸는(벡터로 바꾸는) 머신러닝 모델을 임베딩모델이라고 함
	
	임베딩된 데이터들은 n차원 배열로 저장되고,각 차원별로 해당 차원에서 의미하는 값에 대해 비슷한애들끼리는 그 차원에서 비슷한위치에 존재하게됨
	즉 성별차원에서 king와 queen은 반대측면에 있고,king와 man은 같은측면에 있지만,
	계급차원에서 king와 queen은 같은측면에 있고,man과 king은 반대측면에 있는식
	실제로 사용하는 차원은 1000차원 이런식으로 해서 사용하고,이렇게 단어를 n차원에 배치한걸 임베딩 공간이라 부르고,
	임베딩 공간에서 기준이 되는 단어와 가까운 단어를 찾는게 벡터서치고,시멘틱서치라고도 부름
	
	단어만이 아니라 문장도 임베딩이 가능함
	고전적인 키워드기반의 검색엔진은 정확도와 속도때문에 형태소분석을 하고,유사어 다국어처리등을 거쳐야했지만,벡터서치를 사용하면 전처리를 하지않고 때려박아도됨

  2.벡터서치의 명암
    벡터서치는 만들기 편하고,비용도 싸고 개인화된 답변을 출력하게 할수도있지만,단점도 있음
	일단 차원수에 따라 속도가 느리고,속도를 올릴려면 성능을 좀 포기해야함(차원압축)
	
	그래서 하이브리드 서치같이 먼저 키워드검색으로 db에서 후보데이터를 검색해오고,이 데이터안에서 벡터서치를 하는식으로 처리하기도함
	
	프롬프트엔지니어링의 핵심은 유용한 컨텍스트의 제공이기때문에,벡터서치가 프롬프트 작성보다 더 중요한경우가 많음
	ai가 생성하는 답변의 질은,컨텍스트의 질과 이를 얼마나 잘 활용하게 만드느냐에 달려있기때문
  
6.프롬프트를 디자인 하는 방법  
  1.프롬프트 디자인의 세가지 핵심 요소
    프롬프트의 핵심은 컨텍스트,프롬프트,출력형식지정임
	그 이전에 프롬프트 엔지니어링은
	  프롬프트 결과 설정:원하는 답변이나 결과의 유형을 명확히 정의,즉 최종적으로 얻고자하는 정보의 종류와 형태를 결정
	  프롬프트 평가 설계:설정한 목표를 달성할때,평가를 어떻게 해야할지에 대한 기준마련,즉 결과에따른 평가도출알고리즘,업무에쓸땐 자동화해야함,이게 가장 중요
	  그라운딩 설계 및 평가:ai가 답변을 생성할때 신뢰할수있는 정보나 데이터에 기반하게,모델이 참조할 기초데이터나 사실을 정리
	  프롬프트 디자인:앞서 정의한 목표와 평가기준에 따라 프롬프트 설계
	  모니터링 및 개선:프롬프트가 잘 나왔으면 업무에 반영하고,지속적으로 성능 모니터링
	이 순서를 따름

  2.프롬프트 디자인 프레임워크
    처음 프롬프트를 만든다면 프레임워크를 사용해서 프롬프트의 각 부분별 역할을 나눠두는게 편함
	  role(역할)
	  audience(대상)
	  knowledge/information(지식/정보)
	  task/goal(작업/목표)
	  policy/rule,style,constraint(정책,규칙,스타일,제약사항)
	  format/structure(형식/구조)
	  examples(예시)
	이렇게 있음
	
	역할은,ai의 페르소나를 정의함
	즉 ai가 문제에 대해 어떤 태도나 전문성을가지고 적합하게 응대해야하는지를 설정함
	이는 사용자와의 상호작용에서 ai의 캐릭터나 톤을 결정하는 기초가 됨
	즉
	  당신은 법률전문가입니다.법률 관련 질문에 답하십시오
	  당신은 신문기자입니다.주요 뉴스 이벤트에 대한 보고를 작성하세요
	이런식
	
	대상은 ai가 누구에게 정보를 제공하고있는지,즉 응답의 대상이 되는 사용자나 그룹을 명시함
	이러면 응답내용이 그 대상의 필요나 수준에 맞게 조정될수있음
	
	지식/정보는 질문과 관련되서 참고할만한 지식이나 정보를 컨텍스트에 추가하거나,특정 정보출처를 사용해달라고 명시하는거임
	이러면 환각을 줄이고 응답의 정확성과 관련성을 높이는데 매우 중요함
	  위키피디아의 내용에 따라 나폴레옹에 대해 설명해주세요
	이렇게
	
	작업/목표는 수행해야하는 특정 작업이나 목표를 설정하는것
	이걸 명확히 해야 ai가 목표를 이해하고 사용자의 요구에 부합하는 결과를 제공할수있음
	작업은 여러단계로 쪼개서 최대한 상세하게 작성하는게 좋음
	  500단어로 자기소개서를 작성해주세요
	    자기소개서를 작성해주세요
		서론본론결론으로 나누어 작성해주세요
		경험,성과,개인적성장등 구체적 사례를 들어 설명력을 높여주세요
	이런식임
	
	정책 및 규칙,스타일,제약사항은 응답을 만들때 따라야하는 정책이나 규칙,스타일가이드,제약사항을 설정할수있음
	이걸 설정해서 일관된 응답을 만들고,원하는 방식으로 정보를 제공하게 할수있음
	  성격의 긍정적인 측면만을 강조하며 자기소개서를 작성해주세요 //규칙
	  공손하고 정중한 말투로 사과메일을 작성해주세요//스타일
	  한페이지 내로 비즈니스제안을 작성해주세요//제약
	이렇게씀

	형식 및 구조 설정은,응답이 따라야하는 특정 형식이나 구조를 설정함
	즉 리턴형식의 포맷을 설정할수있음
	  json형식으로 결과를 출력해주세요
	이렇게
	
	구체적인 예시 제공은,원하는 응답 형식이나 내용을 구체적으로 보여주는 예시를 작성해서,원하는방향으로 응답을 유도하는것
	  다음과 같은 형식으로 출력해주세요
	    {"name":"aaa","age":13}
	이렇게

  3.프롬프트 디자인 프레임워크 예제
    이 7가지중 목적에 따라 일부만 사용하거나 각 항목을 세분화해서 자세히 설명해도됨
	이걸가지고 정리한다음 프롬프트를 짜면됨
	일단 구성요소들을 정리해두고,그걸가지고 짜는게 편함
	제3자가 읽어도 의도가 명확하게 전달되면 좋은 프롬프트임
	예시는
	  당신은 친근한 영어 선생님입니다.
	  학생들에게 나폴레옹 보나파르트에 대해 친근하고 교육적인 톤으로, 단순하고 이해하기 쉬운 영어로 설
	  명해 주세요. 위키피디아의 설명을 참고해서 대답해 주세요.
	  
	  설명은 3분 안에 읽을 수 있는 길이로 제한되어야 하며, 학생들이 이해하기 쉬워야 합니다. 아래 예시를 참
	  고하여 대화 형식으로 작성해 주세요.
	  
	  User: 나폴레옹이 누구야?
	  Assistant: 나폴레옹 보나파르트는 18세기 말과 19세기 초에 프랑스를 지배한 역사적 인물이에요.
	  User: 나폴레옹의 업적은?
	  Assistant: 그는 뛰어난 군사 지도자로서 프랑스 제국을 건설했고 많은 전쟁에서 승리했어요. 그의 업적
	  중에는 이탈리아와 독일 통일을 도운 것과 국내 법률과 교육 제도를 개선한 것이 있어요. 또한 그는 파리
	  에 아름다운 건축물과 박물관을 만들어 프랑스 문화와 예술을 증진시키는 데에도 기여했어요. 그러나
	  그의 지배는 헤이그에서의 패배로 끝나고 스코틀랜드의 엘바 섬으로 추방되었어요. 나폴레옹은 많은 인
	  물에게 영감을 주었고 그의 업적은 현대에도 큰 영향을 미치고 있어요.
	좀더 구조적으로 제시하면 llm이 지시를 더 명확하게 이해할수있음
		당신은 친근한 영어 선생님입니다.
		다음 내용을 참고하여 학생들에게 나폴레옹 보나파르트에 대해 설명해 주세요.
		—
		[아래는 나폴레옹에 대한 정보]
		…(중략)...
		—
		다음 규칙에 따라 답변을 작성해 주세요.
		- 친근하고 교육적인 톤으로 작성
		- 단순하고 이해하기 쉬운 영어로 설명
		- 3분 안에 읽을 수 있는 길이로 작성
		- 세 문단으로 작성
		결과 포맷:
		User: 나폴레옹이 누구야?
		Assistant: 나폴레옹 보나파르트는 18세기 말과 19세기 초에 프랑스를 지배한 역사적 인물이에요
	이렇게
	
	프롬프트를 구성할떈 최대한 명확하고 구체적으로 요구사항을 기술하는게 중요함
	그러면 llm이 주어진 지시를 명확하게 이해하고 이를 통해 llm의 응답품질을 크게 향상시킬수있음
	
  3.프롬프팅 테크닉 top 8
	원하는 결과를 더 정확하게 잘 이끌어내는걸 목표로 프롬프트를 디자인하는걸 프롬프팅이라고 함
	이떄 주로쓰이는 프롬프팅 테크닉이 몇개있음
	
	예시제공은 모든 프롬프팅 기법중 가장 기본이 되는 기법으로,사전에 몇가지 예제를 제공하고 이를 참고해서 답변하게 하는것
	여기엔 제로샷(예제제공x),원샷(예제제공1개),퓨샷(예제제공 2개이상)이 있음
	번역등에선 예제를 제공하는것과 제공하지않는것의 성능차이가 크지않지만,번역스타일을 변경하는등의 경우에는 퓨샷이 효과적임	
	
	퓨샷은 파라미터가 큰 llm에서 성능이 훨씬 좋음
	그리고 태스크에 따라 일정 갯수가 넘어가면 아주 드라마틱한 성능향상은 없을수있어서 테스트하면서 적절갯수를 찾아야함
	또한 퓨샷은 정확한 답을 말해야하는 산술추론문제에서는 적합하지않고,랜덤하게 분포된 레이블에서 가장 확률이 높은 답변을 골라야할때 적합함
	즉 패턴인식을 통한 카테고리분류,감정분류등에 적합함
	
	
	생각의 사슬은 모든 프롬프팅테크닉의 기초임
	llm이 문제의 이유 혹은 추론과정에 대해 직접 설명하게 만들어 답변을 더 정확하게 생성하는 기술임
	이러면 중간에 추론단계를 거쳐서 복잡한 사고가 필요한 작업에 정확도를 향상시킬수있음
	또한 답이 나오는 과정을 설명하는 예시를 먼저 보여주면,llm이 그걸 읽고 새 지시에 대한 답을 생성할때 그와 동일한 방식으로 설명함
	이걸 사용해서,중간에 추론과정을 다 거치는 예시를 보여주면,그걸 따라하면서 응답의 결과가 더 낫게 나오게 할수있음	
	즉 cot의 핵심은 생각의 과정을 먼저 제시해준다는것
	
	제로샷cot는 단계별로 생각해보세요 이런 문장을 마지막에 넣어서 성능을 향상시키는 방법임
	이건 풀이방법을 llm이 어느정도 알고있을때 이정도만 해도 충분함
	보통 챗지피티같은경우 이렇게 대답하는게 기본으로 적용되어있음,단 어떤경우엔 오히려 성능이 떨어질수도 있으니 여러샘플로 확인해봐야함
	
	
	자기일관성은 cot보다 ai가 더 정확하고 신뢰할수있는 답변을 제공하게 설계된 기법임
	cot를 더 발전시켜 동일한 문제에 대해 여러 다른 추론경로를 고려한후,가장 일관되게 나온답을 선택하는 방법임
	즉 앙상블을 사용하는거임
	이때,해당 내용과 비슷한문제를 풀이하는 많은양의 예시를 주고,반복실행시켜서 가장 많은횟수의 답을 선택해야함
	즉 cot를 각 답변 하나마다 하나씩한다음,그 결과들을 모아서 앙상블하는거임
	여기서 가장 중요한건 다양성임
	즉 하나의 문제에 대해 여러가지 방식으로 접근하고 해결해보는게 좋음
	보통 20개정도의 예제를 주는게 가장 효과적임
	
	
	샘플링투표는 자기일관성과 비슷하지만 몇가지 차이점이 있음
	  복잡한 cot대신 기본적인 지시를 사용하고,출력을 가공없이 사용
	  단순히 출력산 유사도를 계산해서 다수결로 답을 선정
	  추론만이 아니라 코드생성등 다양한 작업에 대해 일반화된 접근법임
	  자기일관성과 결합하여 상호보완적으로 사용가능
	즉 좀 더 일반화된 방식의 앙상블임
	유사도는 임베딩벡터를 써서 계산할수있고(이것자체도 그냥 llm에 넣어도 되긴할듯)
	이거의 장점은 복잡한 프롬프트설계같은거 없이도 그에 비견될만한 성능을 낼수있다는것이고,작은크기의 모델로도 충분하고,병렬처리로 속도상승이 가능하고
	단점은,비용측면에서 고성능모델과의 비교시 이득이 없다는것
	
	
	선택추론은 복잡한 문제를 해결하기위해 여러 추론단계를 연결하는 기술임
	선택과 추론을 번갈아가면서 해석가능한 원인-추론단계를 생성해서 최종답변을 이끌어내는 기법임
	즉,컨텍스트에서 답할수있는 정보를 먼저 선택하게하고,그 정보를 기반으로 답변하게 만드는 방식임
	  1번쿼리:이 컨텍스트에서 해리는 조용하지않다라는 문장이 참인지를 암시하나요?이 질문의 답에 필요한 내용을 컨텍스트에서 추출해서 나열하세요
	  2번쿼리:셀렉션의 내용에 기반해 질문에 답을 하세요
	이런식으로 사용하는거임
	이건 추론흔적이 남아서 디버깅에 좋지만,실제케이스에 구현하려면 추론단계를 생성하고 종료하는 프레임워크를 굉장히 세심하게 구성해야함
	
	
	최소에서 최대로는,하나의 문제를 더 작은 여러개의 하위작업으로 분할하는 기법임
	이문제의 답을 하기위해 먼저 풀어야할 하위질문을 하나 만들어주세요 라는 프롬프트로 다음문제(질문)을 생성하고,
	해당질문을 다시 던져 답을 생성하는 과정을 최종답변이 생성될떄까지 반복함
	하위작업들은 한번에 하나씩 해결되고,이전에 생성한 답은 다음 문제를 해결하는데 사용함
	추가적으로 제로샷cot까지 넣으면 더 잘함
	
	이건 다른 기법들보다 굉장히 높은 성능을 보임
	이건 cot와 선택추론을 결합한 방식으로,태스크를 분할해서 작은문제로 해결하는 분할정복을 사용하는것
	즉 매우 복잡한 작업이라도,여러개의 작고 쉬운 하위작업을 만들어 이를 높은 신뢰도로 완수하게 하는거임
	
	
	리액트는 실행계획을 유도하고 추적하여 작업별로 실행할 액션을 선택해 실행하는 방법임
	외부api와 상호작용하여 검색엔진을 통해 신뢰할수있는 정보를 사용하거나,계산기나 이미지생성툴을 사용하기도함
	이건 어떤 상황에서 어떤 도구를 사용할지 알려주는 프롬프트와,해당 도구를 사용하는 예시 프롬프트를 결합해서 만들수있음
	또한 사용할수있는 액션중 finish를 필수적으로 넣어 끝낼수있게 하는것	
	최소에서 최대로 방식과 비슷한 방식임
	
	이걸 사용할땐 보통 검색엔진을 실제로 사용하게 만듬,특히 이땐 프롬프트를 분할해서 실행하게해야함
	우선 행동까지부분을 llm에 요청하고,
	llm이 search를 선택하고 출력하면 이걸가지고 검색해서(크롤링으로) 검색결과를 가져오고,
	해당결과를 내용에 넣어주고 다시 쿼리를 날려서 최종결과를 생성하면됨
	
	이건 정보를 반복적으로 생성하거나 수집하여 프롬프트에 추가하기때문에,프롬프트가 길어질수있어 토큰제어에 유의해야함
  
    
	자기평가는 llm이 생성한 결과를 llm스스로 평가하게 만들어 오류를 잡거나 결과를 향상시키는 기법임
	즉 답이 맞는지를 단계적으로 생각하게하고,
	답이 틀렸다면 이유를 설명하게 해서 처음질문과 답변,자기평가프롬프트와 처음답변을 검토한내용을 모두넣고,
	다시 답변하게하는것
	단 이건 gpt4정도 되어야 쓸수있음

  4.프롬프팅 확장 테크닉:예시를 제공하고 생각하게 만들기
    전문가 역할극 프롬프팅은,프롬프트 디자인의 롤과 같은거임
	이러면 배경지식을 암시적으로 이해하고 답변해서 성능이 크게 향상됨
	
	위키피디아에 따르면 기법은 단순히 위키피디아를 참조해서 답하세요라고 하는것만으로 높은 성능을 얻을수있는 기법임
	즉 llm이 사전에 학습한 지식베이스가 있다면 해당 내용을 참조하라고 하는것만으로도 성능이 올라감
	즉 이건 질문이나 답변을 위키피디아에 따르면이라는 문구로 시작하게하는것
	위키피디아나 구글스칼라같은 신뢰할수있는 소스를 사용하면 좋음
	
	지식생성 프롬프팅은,주어진 질문에 대한 관련지식을 먼저 생성하라고 한다음,생성된 지식을 바탕으로 답변을 생성하는 기법임
	어떤 질문이 주어지면,먼저llm은 해당 질문과 관련된 지식조각들을 다양하게 생성하고,이런 지식조각들을 통합한후 정보화해서 최종답변을 생성함
	즉 위키피디아에 따르면과 비슷하게,학습된 데이터를 바탕으로 답하게하는방식
	
	검색증강생성(rag)은 답변을 생성하기전에 사용자의 요청과 관련된 지식을 외부검색컴포넌트에서 검색한후,
	해당내용을 프롬프트에 컨텍스트로 제공하여 결과를 생성하는 기법임
	답병의 정확도를 극도로 높이기위한 가장 좋고 확실한 방법임
	또한 단순검색이 아니라 수식계산같은걸 할때,계산기쓰는것도 rag라고 할수있음

  5.프롬프팅 확장 테크닉:전략을 짜고 스스로 평가하기
    또 전략을 스스로 짜고 평가하게 하는방법도 있음
	
	생각트리는 트리구조로 답변을 생성해내면서,중간단계에서 진행상황을 스스로 평가하여 생각트리를 확장하고 선택하는 방법임
	즉 여러종류의 추론을 하고,거기에 따른 cot를 각각 계속 갯수를 늘려가며 추론하는방식
	이건 성능은 잘나오지만,비용이 비싸서 사용하기 힘들긴함
	
	계획-풀이 프롬프팅은,cot같은거의 문제가 중간문제풀이단계가 누락되는경우가 있다는것인데,이걸 해결하기위한 기법임
	전체작업을 더 작은 하위작업으로 계획을 세우는겉 같은데,먼저 일단 다 나눠두고 하나씩 처리하는 방법임(즉 첫단계가 계획세우기임)
	
	자동 프롬프트 엔지니어는,llm이 프롬프트를 자동으로 생성하는 기법임
	원하는 작업에 대한 출력예시를 주고,해당작업을 잘 수행할수있는 프롬프트를 다양하게 생성함
	그리고 이를 채점해서 가장 높은 점수를 받은 프롬프트를 사용하는 방식임(낮은건 삭제하고)
	
	프롬프트 기법의 핵심은
	  예시제공
	  생각을 많이 하게 함
	  문제풀이 전략을 세우게함
	  스스로 평가
	이 4가지임
	만약 결과가 잘 안나오면,이4가지중 뭐가 빠졌나를 생각해보면좋음

  6.포맷팅
    포맷팅은 출력포맷을 지정하는것임
	기본 채팅모델은 대체로 텍스트를 장황하게 늘어놓는걸 좋아함
	그래서 결과값을 자동화하는등의 목적으로 활용하려면,원하는 출력 포맷을 정확하게 지정해줄 필요가 있음
	
	보통 자주쓰는건 리스트,키-값,json,테이블,마크다운정도가 있음

  7.프롬프트 체이닝
    프롬프트체이닝은 일련의 프롬프트와 그에 따른 응답을 순서대로 연결하여 하나의 지속적인 대화나,여러 하위태스크로 이루어진 복잡한 태스크를 수행하는 기법임
	자기일관성이나 선택추론,최소최대,리액트등 고수준 프롬프트 엔지니어링은 다 이걸 사용하고있음
	
	가장 기본적인 프롬프트 체이닝은 답변과 질문을 순차적으로 진행하면서 프롬프트를 연결하는것(선택추론)
	또한 사용자의 입력유형이나 출력유형에 따라 다른방식으로 분기를 타는 방식도 사용할수있음(코드같은거 쓰고 리액트써서)
	
	또한 결과내 유사 체이닝효과 주기라는,cot를 답변안에서 진행하게 하는 방법도 있음
	즉 텍스트는 순차적으로 출력되니,포맷팅을 사용해 쉬운거를 강제로 먼저 뽑게하고,
	뒤에 나오는 텍스트는 그거기반으로 출력될테니 어려운걸 뒤에둬서 앞에걸 참고할수있게하는것

  8.좋은 프롬프트 만들기
    좋은 프롬프트를 만들때는
	  지시문을 명확하게 만들기
	  적절한 예시를 제공
	  모델에게 생각할 시간을 줌
	  작업을 하위 작업으로 분해
	  적절한 컨텍스트를 제공
	  프롬프트엔지니어링이 작동하지 않는상확도 항상 고려
	  프롬프트를 구조화하여 작성(코드처럼)
	이 7가지를 항상 숙지해야함
	프롬프트를 상세하게 작성하고,구조적으로 작성할수록 좋은 답변을 얻을수 있음
	또한 결과는 json등의 구조화된 형태로 표현하게하면 원하는 결과를 조금 더 정확하고 체계적으로 얻을수있음
	
	특히
	  작업의 목적 및 배경 설명(이건 무슨내용이고 대략 무슨일을 할거다)
	  컨텍스트(참고할 내용,문서)
	  구체적인 질문이나 지시 및 출력형식이나 가이드
	들이 있으면 성능이 전반적으로 개선됨
	
	가장 중요한건 반복해서 개선하는것
  
  
7.llm 구성요소 및 생성조건  
  1.토큰
    토큰은 언어모델에 입력하거나 출력하는 텍스트의 구성요소임
	이건 단어를 가지고 빈도수에 따라 단어를 그대로쓰거나 분리하거나 하는식으로 토큰이 구성됨
	즉 apple는 1토큰이라면,apples는 app와 les로 2토큰이 되는식
	또한 gpt에서 i love apple.같은경우 마침표랑 띄어쓰기합쳐서 4토큰인데,
	i가 1토큰,%20love가(띄워쓰기)1토큰,apple이 1토큰,.이 1토큰 이렇게 4토큰임
	
	이것도 모델돌려서 나오기때문에 빈도수에 따라 자동적으로 형성된 모델의 결과값임(bpe)
	이건 가장 많이 나타나는 문자열쌍을 합치는 방식으로,문장 혹은 단어안에 있는 글자들을 적절한 단위로 나누고,빈도가 높은 글자조합을 토큰으로 사용하는식임
	이건 영어고,한글의 경우는 한 글자당 2바이트를 사용하기때문에 비효율적일 확률이 높음
	그래서 가급적 프롬프트는 영어로 던지는게 좋고,입출력전에 먼저 번역해서 사용하는 방법을 선택할수도있음(단 고유명사가 있을경우사용불가)

  2.컨텍스트윈도우
    컨텍스트윈도우란 문맥을 판단하거나 다음 단어를 예측하기위해 참고할 토큰의 범위 또는 언어모델이 다룰수있는 최대 토큰수를 가리킴
	즉 다음 토큰을 예측하기위해 어텐션에 넣는 이전 토큰의 갯수임
	요즘건 막 100만토큰 이럼

  3.주요 생성 옵션
    보통 온도랑 topk,맥스랭스정도만 알면됨
	온도는 높으면 예측된 토큰의 선택확률을 그대로 가져가서,더 창의적인 답변이 나오게됨
	온도가 낮으면 예측된 토큰의 선택확률에 보정을 줘서,높은걸 주로 선택해서,더 정확한 답변이 나오게됨
	
	topp나 topk는 출력할 토큰의 후보를 선택하는 옵션임
	즉 온도가 선택확률이라면,top은 선택지를 건드리는옵션
	대체적으로 확률높은 n개(top k)나,몇퍼센트 이상(top p)만 출력하는식임(정확히는 p를 넘길때까지 상위n개를 계속 더하고,그걸 리턴)
	보통은 잘 건드리지않고,온도를 매우 높게했을경우엔 좀 건드려줘야함
	
	맥스랭스는 생성할 최대 토큰수를 설정하는것
	입력한 토큰과 최대 토큰수가 모델의 최대 토큰수를 넘지않게 주의깊게 설정해야함
	
	나머지는 
	  빈도패널티:같은 토큰이 반복되면 패널티부여,즉 직전토큰이랑 같은토큰 반복하면 반복횟수에 따라 선택확률에 마이너스보정줘서 같은단어사용 지양
	  존재패널티:특정 토큰이 이미 한번 이상 출력됐으면 패널티부여,즉 출력전체에서 한번이상 나왔으면 마이너스보정
	  중단 시퀀스:특정 문구가 출력되면 답변생성을 중지,gpt가 무의미하게 생성을 반복하는 경우를 제어할수있음(요즘은 잘 안씀)
	  시작문구 주입:생성을 시작하기전에 특정문구를 먼저 삽입할수있게함,'위키피디아에 따르면'이 이걸 사용하는것과 거의같음
	가 있음

8.llm의 대표적인 자연어 처리 기술
  언어모델을 이용해 처리할수있는건 주로 텍스트생성과 텍스트분석으로 나눠짐
  이걸 전부 하나로 날먹할수있는게 좋은거
  언어번역,스타일변경,편집 및 재작성,요약은 텍스트 생성이고 별거없음
  텍스트 분석은
    개체명인식(내용은 공통적이지만 형식은 정해져있지 않은 텍스트들에서 특정 정보를 식별해서 특정형식으로 재구성),
    감정인식,
    문서분류,
    주제모델링(문서집합에서 특정 주세를 발견하고,각 문서에 그 주제를 할당하는 작업,즉 각 문서의 주제를 뽑아내는,문서분류와 비슷하지만 미리 주제리스트를 주지않는거)
	유사성평가(여러 텍스트사이의 유사성측정)
	질문답변
  등이 있음
 

9.실습준비
  스킵

10.프롬프트 예제
  상세프롬프트는 책보고,적을만한거만 적음
  1.유튜브/블로그 제목 다듬기
    프롬프트는 한번쓰고 말게 아니기떄문에,결과가 일관성있게 나와야함
	그래서 프롬프트를 구조적으로 짜야하는것
	
	먼저 진행할 작업에 대해 간단히 설명하고,구체적인 절차와 규칙을 정해주면됨
	특히 출력포맷은 gpt가 결과를 내기전에 한번더 생각하게해서 더 좋은 결과를 내도록 하는 효과가 있음
	
	그리고 출력을 받아보고,문제가 있으면 해당부분을 수정하고 다시 돌려보고를 반복하면됨
	또한 지시와 절차,규칙을 먼저 적고,건드려야할 내용(실제 사용할 컨텍스트)은 마지막에 적는게 좋음
	
	핵심은
	  의도한 입력과 결과 샘플 여러개를 모아 실험
	  프롬프트를 점진적으로 완성시켜나가기
	  프롬프트의 구성과 구조를 다양하게 바꿔보기
	  프롬프트가 길어지는걸 두려워하지말고 최대한 상세하게 작성
	임

  2.영어 단어장 만들기
    테이블형태나 json으로 출력을 지정할때,각 열이나 행에 들어갈 내용을 구체적으로 언급하면 이걸 참고해서 더 정확하게 작업을 이해함
	또한 csv로 출력포맷을 지정하면 이를 복사하거나 저장하여 엑셀로 가져오기편함

  3.채용 인터뷰 질문 생성하기
    가장 먼저 해야할건 입력과 출력을 먼저 설계하는것
	그다음에 프롬프트를 짜야함
	
	보통 프롬프트는 배경과 목적을 가장 먼저 넣고,작업에 필요한 컨텍스트정보를 넣고,마지막으로 지시문을 넣는게 가장 좋은 결과를 냄
	즉
		주어진태스크를 설명
		인터뷰질문생성에 필요한 내용을(컨텍스트)를 작성
		앞의 내용을 기반으로 지시문 작성
	이순서로 적으면됨(프롬프트의 순서)
  
11.실전프롬프트 예시
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  