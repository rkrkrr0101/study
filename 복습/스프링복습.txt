생성자주입시 생성자가 하나면 autowired를 안붙여도됨
프로토타입 스코프는 생성과 의존관계주입까지만 하고 그뒤로는 스프링에서 손땜(postConstruct는 켜지는데 PreDestory는 발동하지않음)

트랜잭션을 사용한다=오토커밋을 끄고 수동커밋을 사용한다는것
이때 수동커밋은 한번키면 해당세션내에선 계속 유지됨
조회락은 정산같은곳에선 유용함
트랜잭션은 서비스계층에서 담당해야함(비즈니스로직기반으로 락을걸어야하니)
스프링에선 @Transactional로 트랜잭션을 메서드단위로 걸수있음

Throwable을 캐치에서 잡아버리면안됨,이러면 oom같은거도 잡혀버림
예외를 전환할땐,기존예외를 포함해야 스택트레이스가 끊기지않음
	log.info("ex",e);
이런식으로 하면됨

서비스계층에선 의존성을 최대한 없애는게 좋아서,레포지토리쪽 체크예외도 언체크로 바꿔서 던지는게좋음

트랜잭션 aop에선,내부객체의 다른메서드에서 트랜잭션 메서드를 호출할때,트랜잭션이 안걸리는걸 조심해야함(프록시를 안거치기때문)
트랜잭션메서드 안에서 트랜잭션메서드를 호출하면,외부트랜잭션에 내부트랜잭션이 편입하고,둘중 하나라도 실패하면 예외가터짐(기본값)