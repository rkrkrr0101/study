n이랑 m받고
x랑 y 받고 d받고

array에 2중으로 좌표받고

(2차원배열에서 x,y는 array[y][x]) array=[[1,1,1,1],
								   [1,0,0,1],
								   [1,1,0,1],
								   [1,1,1,1]] 

steps=[(0,1),(1,0),(0,-1),(-1,0))

무한루프
	루프4
		루프카운트+1
		현재 d-1하고 d가 -1이면 3으로만듬
		x랑 y에 dstep을 더해서 그자리값이 0이면
			그자리값 1로만들고
			그자리로 이동
			이동카운트+1
			루프카운트0 
			브레이크
	if 루프4면 d-2한값(등뒤)해보고 
		되면 이동
		이동카운트+1
		루프카운트0
	안되면 브레이크
리턴
	
	
	
n,m=4,4
x,y,d=1,1,0
array=[[1,1,1,1],[1,0,0,1],[1,1,0,1],[1,1,1,1]]
movecount=0
roopcount=0
steps=[(0,1),(1,0),(0,-1),(-1,0)]
array[x][y]=1
movecount+=1
print(x+steps[d][0],y+steps[d][1])
while True:
    for i in range(4):
        roopcount+=1
        d=d-1
        if d==-1 :d=3
        if array[y+steps[d][1]][x+steps[d][0]]==0:
            array[y+steps[d][1]][x+steps[d][0]]=1
            x=x+steps[d][0]
            y=y+steps[d][1]
            movecount+=1
			roopcount=0
            break
    if roopcount==4:
        if array[y+steps[d-2][1]][x+steps[d-2][0]]==0:
            x=x+steps[d-2][0]
            y=y+steps[d-2][1]
            movecount+=1
            roopcount=0
        else :break
		