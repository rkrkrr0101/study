2차원배열 만든다음에 초기값 0으로 세팅하고[i][j]
 기둥설치오면 i-1이 기둥이거나 -1이면 ij에 1넣고
 보는 ([i-1])이 1이거나 (j+1,j-1)이 동시에 2면  2넣고
 기둥 보 둘중 먼저 설치된거있으면 3넣고
 제거는
 기둥은 i+1이 0이 아니면 무시
 보는 자기 j+1,j-1이 보면
	[i-1][j+1]
	[i-1][j-1]
	에 기둥이 있나확인하고 기둥없으면 무시
5<n 

배열생성
for frame in 프레임배열:
	i=frame[0]
	j=frame[1]
	kind=frame[2]
	mode=frame[3]
	if mode==1:#크리에이트
		if kind==0:#기둥
			if i-1<0 or array[i-1][j]==1 or array[i-1][j]==3:
				if array[i][j]!=1 or array[i][j]!=3:
					array[i][j]+=1
			
			
		if kind==1:#보
			if array[i-1][j]==1 or array[i-1][j+1]==1 or array[i-1][j]==3 or array[i][j+1]==3 or (array[i][j+1]>=2 and array[i][j-1]>=2):
					if array[i][j]!=2 or array[i][j]!=3:
						array[i][j]+=2
		
	if mode==0:#딜리트 
		
			if kind==0:
				if i+1<4 or array[i+1][j]!=0:#보 옆기둥일때 반례일수도?
					if array[i][j]!=1 or array[i][j]!=3:
					array[i][j]+=-1
			
			if kind==1:
				if array[i][j+1]>=2
					if not(array[i-1][j+1]== 1 or if array[i-1][j+1]== 3):
						continue
				if array[i][j-1]>=2
					if not(array[i-1][j-1]== 1 or  array[i-1][j-1]== 3):
						continue
			
#틀림 아마 삭제부분에서 조건틀린거같은데 	크기 작으니까 그냥 n^3로 설치된구조물 전부확인하는식으로 하는게 빨랐을듯
n=5
bf=[[0,0,0,1],[2,0,0,1],[4,0,0,1],[0,1,1,1],[1,1,1,1],[2,1,1,1],[3,1,1,1],[2,0,0,0],[1,1,1,0],[2,2,0,1]]
def solution():
    array= [[0]*(n+1) for i in range(n+1) ]
    for frame in bf:
        i=frame[1]
        j=frame[0]
        
        kind=frame[2]
        mode=frame[3]
        if j>n or i>=n:
            continue
        if mode==1:
            if kind==0:
                
                    
                if i-1<0 or array[i-1][j]==1 or array[i][j-1]>=2:
                    if array[i][j]!=1 or array[i][j]!=3:
                        array[i][j]+=1
            if kind==1:
                if array[i-1][j]==1 or (j<n and array[i-1][j+1]==1) or array[i-1][j]==3 or (j<n and array[i][j+1]==3) or (  (j<n and array[i][j+1]>=2) and (j-1>0 and array[i][j-1]>=2)):
                    if array[i][j]!=2 or array[i][j]!=3:
                        array[i][j]+=2
        if mode==0:
            if kind==0:
                if i+1<n and array[i+1][j]!=0:
                    if array[i][j]!=1 or array[i][j]!=3:
                        array[i][j]+=-1
            if kind==1: 
                if array[i][j+1]>=2:
                    if not(array[i-1][j+1]== 1 or  array[i-1][j+1]== 3):
                        continue
                if array[i][j-1]>=2:
                    if not(array[i-1][j-1]== 1 or  array[i-1][j-1]== 3):
                        continue
                array[i][j]+=-2
                
        
    
    
    
    
    
    answer = []
    for j in range(n+1):
        for i in range(n+1):
            if array[i][j]!=0:
                if array[i][j]==1:
                    answer.append([j,i,0])
                if array[i][j]==2:
                    answer.append([j,i,1])
                if array[i][j]==3:
                    answer.append([j,i,0])
                    answer.append([j,i,1]) 
    return answer

    
    
print(solution())
