정규표현식에서는 반복을 제외한 모든 문자가 각각 하나의 문자에 대응됨

파이썬에선 re를 임포트해주면 쓸수있고(기본라이브러리)

기본적인 검색메서드는 
match(문자열의 처음부터 매치 \A를 붙인거와같음)
search(문자열 어디든 일치하는거있으면 처음거)
findall(문자열 어디든 일치하는거 전부(배열로줌))
finditer(findall과 거의같은데 지들오브젝트로 줌)
fullmatch(패턴과 문자열 전부 일치해야됨)

그리고 저기 검색메서드에서 지들오브젝트로 준거 파싱하는메서드는
group()(일치한 문자열 반환,iter같은경우엔 foreach로 풀어서해야함,나중에 그륩만들면 괄호안에 그륩으로 불러올수도있음)
start()(문자열 시작위치)
end()(문자열 끝위치)
span()(문자열 시작과 끝 튜플로 리턴)

메타문자는
\t 탭문자

\n 개행문자

\ 단일로는 다른 메타문자를 그냥문자로 취급하게해줌(\[, \{, \^ ,\\)

[] 대괄호 안에는 안에있는거 전부 or로해서 그중 하나라도 나오면 ok임[abc]면 a b c 3개중 아무거나 나와도 ok임

   대괄호 안에 -이 들어있으면 앞에거부터 뒤에거까지 
   [0-9]는 숫자전부 
   [a-z]는 알파벳소문자전부 
   [a-zA-Z]알파벳전부  
   [가-힣] 한글 완성단어전부
   
   그리고 대괄호 안에 대괄호끼리 차집합(뺴기)도 가능함
   [a-z-[g-z]]는 a부터 f까지
   
^ 는 뒤에나온거를 제외한 나머지 전부만 ok함 [^0-9]면 숫자를 제외한 전부 

. 은 와일드카드로 모든 문자와 매칭됨 a.b 하면 acb adb 다 매칭되고  accb 이런 글자수 틀려지는건 매칭안됨
  그리고 대괄호 안에서는 그냥 .으로 인식함
  플래그로 re.s을 넣으면 개행문자랑도 매칭시킬수있음
  이건 문자열을 행단위로 처리할때나 그럴떄 사용할수있음
  아니면 문자열 앞에 (?s)를 넣으면 앞에 공백이 있으면(2번째줄이면) 스킵함

\w 는 모든 알파벳 숫자 언더바(_) 파이썬버전에따라 한글까지 처리함
\W 는 위에거를 제외한 전부 정규표현식에서 대문자 소문자는 완전히 반대의걸 나타냄

\d 는 모든 숫자
\D 는 숫자를 제외한 전부

\s 는 공백문자(스페이스 탭 개행문자)
\S는 공백뺴고전부

\b는 단어 경계와 매칭됨 
   \babc\b면 완벽히 abc인걸 찾고 
   \babc면 abc로 시작하는걸 찾고 
   abc\b면 abc로 끝나는걸 찾음
\B는 단어경계가 아닌것과 매칭됨 
  \Babc하면 단어중간에 abc가 나오는거만 찾고
  \Babc\B하면 처음과끝이 아닌 단어중간에 나오는걸찾음
  
 \b \B를 쓸거면 문자열앞에 r을 붙여야함 r'\b\w\b'이런식
 
\A는 행의 시작과 일치해야 하고 
\Z는 행의 끝과 일치해야함 
여기서 행은 문자열 시작과끝,개행문자가 있으면 행의 시작과끝으로 인식함
  \A\w 하면 문자열시작후 한글자고
  \w\Z하면 문자열 마지막한글자
  \A\Z하면 빈문자열 찾을수있음
  
|는 단어 여러개중에서 하나를 찾고싶을때 씀
  (one|two|three)면 셋중 하나가 나오면 ok처리함
  단 이건 앞에서부터 처리하기떄문에 (one|oneself)면 
  무조건 one이 처리먼저끝나고 다찾아버리기때문에 oneself가 나와도 one만리턴됨
  
*는 어떤 문자가 0회이상 반복되면 리턴함(사실상 글자수제한없는와일드카드)
 a*과 ''도 리턴되고 다됨
 
+는 1회이상 반복되면 리턴함
 a+는 a aa aaa 다되지만 ''은 안됨
 
{}는 n회 반복되면 리턴함
  a{3}은 aaa
  a{3,4}는 aaa aaaa
  a{3,}는 a3개이상 전부
  단 이거쓸때 a{3}이렇게할때도 aaaaa도 aaa를 뱉기때문에(앞에서부터 탐욕적으로먹음)
  \ba{3}\b하면 aaa만 뱉음
?은 {0,1}임
  ab?a면 aa aba aaaa일떄 aa aba aa aa이렇게 4개뱉음(마지막에 단어경계가없어서 b0으로 2개뱉음)
 
기본적으로 정규표현식은 탐욕적으로 최대한 많이 뱉으려고하는데,이걸 나태하게 바꾸고싶으면 뒤에 ?붙여주면됨
  <p> *?</p>면 <p> aada</p> <p> bbbb</p> <p> aaaafg</p> 여러개있어도
  <p> aada</p>이거하나뱉고 끝냄
  
()는 그룹으로 묶어줌
	(12)+이면 12가 2번이상 나오는걸 리턴해줌
	근데 findall하면 12만 나오는데 이건 그륩의 캡쳐기능때문임
	
	캡쳐는 원하는 부분만 빼고싶을때 사용하게 되는데 서치를 해서 괄호로 묶어서 정규식돌리면 괄호로 묶인부분들만 또 묶여서 나옴
	'\d{4}-(\d\d)-(\d\d)', '1999/05/21 2018-07-28 2018-06-31 2019.01.01'
	[('07', '28'), ('06', '31')]
	단 findall은 이렇게 바로나오고 그냥 search는 오브젝트 리턴하는데
	오브젝트에다 group쓰면 그냥 전부나오고 groups()쓰면 괄호로 묶은거만 리턴함
	group(0)은 전체 리턴
	group(1)는 첫번째 괄호리턴
	group(2)는 두번쨰 괄호리턴
	
	근데 묶긴묶어야하는데 캡쳐하기 싫으면 (?:조건식)하면 묶긴묶는데 캡쳐는 안할수있음
	
\숫자는 앞에 쓴 그륩과 같은걸 가져와서 쓸수있음
	만약 앞뒤가 같은걸 찾는다고 하면  r'(\w)\w\1' 하면 첫번째w와 중간에 아무거나 그리고 첫번째w로 서치할수있음
	근데 이걸 그냥 search하면 하나밖에 못찾고 findall하면 한글자밖에 안나오니까
	finditer해서 가져온다음에 foreach로 분리해서 group해서 뱉으면됨
	
근데 저렇게 숫자하면 쓰기힘드니까 이름을 붙일수있는데
 (?<이름> 조건식) 하면 ?P<이름>으로 찾을수있고
 group 에서는 group('이름')으로 찾을수있음
 
정규식안에서 주석쓰고싶으면 re.X 플래그넣어주고 r붙여주고 앞뒤 따옴표를 ''' '''로 3중으로싸주면됨

문자열을 치환하고싶으면 re.sub쓰면됨
 a=re.sub(조건,바꿀문자열,문자열)이렇게 넣고 받으면됨
 바꾼 갯수도 받고싶으면 a=re.subn하면 바꾼문자열이랑 갯수랑 묶어서리턴해줌
 
 이거도 앞에 조건에서 쓴 그륩을 가져오고싶을땐 똑같이 가져올수있음 바꿀문자열에 r'\1\2'이렇게 똑같이쓰면됨 이름붙인거도똑같음
 전체 일치한걸 가져다넣고싶으면 (\g<0>)를 넣으면됨 그냥 group(0)를 넣는느낌
 
 바꿀문자열 안에 matchobj를받고 문자열을 뱉는 함수를 넣으면 오브젝트받아서 문자열을 뱉기떄문에 사용가능함
 
re.spilt는 특정 조건으로 잘라서 리턴

re.compile은 반복문돌릴때 부하많이걸리니까 조건식을 미리 안에 박아두고 문자열만 넣어서 사용
  a=re.compile('조건')
  b=a.search('문자열')

행단위 검색할떄는 spilt로 개행문자를 잘라서 배열에 넣고 그걸 다시 서치하는식으로 하면 할수있음

양방탐색은 조건을 걸어서 앞이나 뒤부터 검색하다가 조건이 맞으면 일치에 성공하거나(긍정) 조건이 틀려야만 일치에 성공하는식으로(부정)
사용됨
탐색은 
  (?= 조건)긍정전방
  (?<=조건)긍정후방
  (?! 조건)부정전방
  (?<!조건)부정후방
  탐색은 정규식에서 소비하지않기때문에 딱 조건을 만족하기 전까지만 리턴됨
  여기서 전방 후방은 자기가 먹은거의 전방 후방이기때문에 a랑 b 로 감싸여져있는걸 찾고싶으면 후방a .* 전방b 로 써야함

조건은 (?(숫자)맞으면|아니면) 여기서 숫자는 재참조할때 그 그륩숫자임 명명했으면 이름넣어도됨
(a)?b(?(1)c|d)는 
a가 맞으면 1에 a를 넣고 
b를 검색한다음에 있으면 뒤로넘어가고 없으면 실패 
조건은 1이 들어있으면 c로 검색하고 아니면 d로 검색
해서 abc or bd가 나옴
근데 이건 너무 머리아프고 보기힘드니까 안쓸래  
 


	
	

  
  

	

  
