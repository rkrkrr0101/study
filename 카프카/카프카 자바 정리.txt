1.서문
	카프카는 데이터 서빙의 중앙에서 모든 데이터처리를 중앙집중해서 파편화를 없애는 툴임
	즉 모든곳에서의 데이터스트림을 카프카로 통합하고,소비자들도 여기서 소비할수있게 만드는툴
	이렇게되면 데이터를 생성하는애도 그냥 카프카에 밀어넣는책임까지만 가지게되고,소비자를 신경쓰지않아도됨
	
	카프카에서 데이터를 보내는쪽을 프로듀서라고 부르고,
	소비하는쪽을 컨슈머라고 부름(생산자-소비자 패턴)
	카프카로 전달할수있는 데이터포맷의 제한은 사실상없고(직렬화 역직렬화를 사용하기때문에),
	기본적으로는 ByteArray, ByteBuffer, Double, Long, String 타입에 대응한 직렬화클래스를 기본제공함
	커스텀도 Serialzer<T>,Deserialzer<T>를 상속받아서 만들면 됨
	
	상용환경에서 카프카는 최소 3대이상의 서버에서 분산운영해야함
	이래야 한서버가 장애가 발생해도 지속적으로 데이터를 복제하기때문에 안전하게 운영할수있음
	그리고 데이터를 묶음단위로 배치전송하기때문에,낮은지연과 높은데이터처리량도 가지게됨
	
	
	카프카는 데이터레이크로 사용됨,일단 모든데이터를 다 때려박고(정제되지않은),여기서 나중에 필요한걸 알아서 찾으면됨
	이떄 e2e방식으로는 넣으면 한두군데서넣긴 할만한데,많아지면 파편화되고 복잡도가 올라감,그래서 하나로 통일된 솔루션이 필요한데,그게 카프카임
	카프카의 장점은
		배치전송해서 처리량이 높음
		확장이 쉬움(스케일아웃이 쉬움)
		영속성을 가지면서 느리지않음(캐시를 사용해서)
		고가용성(3대이상으로 구성해야하는이유)
	이 있음
	
	카프카는 모든 데이터를 스트림데이터로 취급해서 처리함
	데이터는 배치데이터와 스트림데이터로 나뉘는데,
		배치데이터는 한정된기간단위(140130일 데이터 이런식)의 데이터고,즉 끝이 정해져있고 일괄처리가 쉬움
		스트림은 한정되지않은 데이터고,끝이 정해지지않은(주식정보,클릭로그등)데이터임
	배치데이터를 스트림으로 처리하는건,모든데이터에 타임스탬프를 붙여서 배치데이터로 구성된 스트림으로 취급하는거임(스트림<배치> 이런느낌)
	이렇게 처리하려면 변환기록이 일정기간 삭제되면 안되고,지속적으로 추가되어야함
	그리고 해당레이어는 spof가 될수있으므로 반드시 내결함성과 장애허용특징을 지녀야함
	즉 이런식으로 카프카는 데이터를 처리함
	
2.카프카 빠르게 시작해보기
	aws설치부분은 넘어감 필요하면보자
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	