1.기본 분류모델(이진)
	1.파일읽기
	
	2.필요없는컬럼 버리기
	3.널값채우기
	4.y값 옮기고 버리기
	5.범주형컬럼들 카테고리화
	*.값들끼리 차이가 클경우 정규화
	*.이진이 아닐경우 y값 카테고리화
	
	
	6.모델생성(dense)
	7.fit
	8.테스트데이터 똑같이 가공
	9.예측

2.다중 이미지 분류
	1.파일읽기
	2.y값 옮기고 버리기
	3.이미지크기조절 (/255)
	4.모델생성(dense나 conv2d)
	5.fit
	6.테스트똑같이가공
	7.예측
3.기본회귀모델
	1.파일읽기
	2.필요없는컬럼버리기
	3.널값채우기
	4.y값옮기고 버리기
	5.범주형컬럼 카테고리화
	*.값들끼리 차이클경우 정규화(StandardScaler())
	6.모델생성(dense)	
	7.fit
	8.테스트똑같이가공
	9.예측
4.tfrecord 다중 이미지 분류(tpu사용한 enet(합성곱))
	1.파일읽기
	2.tpu설정
	3.파일패스설정(trecord)
	4.trecord분해함수 삽입
	5.트레인 검증 테스트 생성 함수삽입
	6.트레인 검증 테스트 생성
	7.tpu연결후 모델생성(enet-풀링-dense)
	8.fit
	9.예측
5.자연어 이진 분류(rnn)
	1.파일읽기
	2.필요없는컬럼 삭제
	3.널값채우기
	4.텍스트 패드제거함수 삽입(전처리)
	5.텍스트 패드제거
	6.텍스트 토큰화
	7.텍스트 시퀸스화(pad(시퀸스)하면 서로 길이다른거도 처리가능,여기서 최대길이 정해두는게좋음(maxlen))
	*.임베딩층 받아쓸거면 다운
	*.다운받았으면 파일열어서 임베딩인덱스에 삽입
	*.글로브사용할경우 매트릭스변수만들어서 토큰인덱스에서나온값 임베딩인덱스에서 받아서 그값삽입
	  아닐경우 그냥 임베딩층에 바로넣으면됨
	8.모델생성(임베딩(토큰랭스,임베딩차원수,인풋랭스)-bidirectional(lstm)-dense 중간에 드롭아웃 알아서)
	9.fit
	10.테스트데이터 시퀸스화(여기서 원래있던 토크나이저써야하고,fit_on_texts하면안됨 트레인값 그대로가져가야함)
	   바로 (pad(texttoseq)하면됨)
	11.예측
	











	
	