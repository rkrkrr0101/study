-1.쿠브플로소개
1.쿠버네티스에서의 머신러닝
	쿠브플로는 쿠버네티스에서 머신러닝을 하기위해 나왔음
	쿠버네티스에서 머신러닝을 돌리면
		결합성
		이식성
		확장성(분산시스템에서의 확장성)
	을 챙길수있게됨
	
	그리고 컨테이너단에서 os단 안에있는 드라이버같은걸 알아서 스케줄링해주기도 함
	
	쿠브플로는
		머신러닝모델을 다른환경에서 트레인,서빙하고싶을때
		머신러닝트레이닝잡을 주피터노트북으로 관리할때
		클라우드에서 cpu,gpu를 사용해서 트레이닝잡을 시작할때
		머신러닝코드를 다른라이브러리에서 합칠때
	사용할수있음
	기본적으로 머신러닝에선,ml코드보다 다른문제들이 너무커서,그런 다른문제들을 커버쳐주는 쿠브플로를 사용하는것
	
	기본적으로 쿠버네티스api는 너무 로우레벨이라서,좀더 하이레벨인 쿠브플로를 사용하기가 더 쉬움
	
	
2.일반적인 유스케이스
	보통 쿠브플로를 사용하는 케이스엔
		gpu를 주피터노트북에 사용하기(보안문제도 해결됨)
		공유 멀티테넌트가 쉬워짐(온프레미스의 하드웨어같은)
		전이학습 러닝 파이프라인같이 파이프라인만들기가 쉬움
		하이퍼파라미터 테스트를 지원해줌
		모델 배포가 쉬움(그냥 api처럼 파드에 콜해서 가져다쓰면됨)
	
3.쿠브플로의 구성요소
	쿠브플로로 만들때 구성요소는 크게
		ml도구(텐서플로같은)
		쿠브플로앱과 스케폴딩(쿠브플로와 쿠버네티스)
		플랫폼/클라우드(gcp,aws)
	로 구성됨
	
	쿠브플로는 기본적으로 쿠버네티스의 커스텀리소스인 tfjob를 사용해서 학습을 돌림
	얘는 쿠버네티스가 분산텐서플로잡을 실행시키도록 해줌
	그리고 쿠브플로의 많은 요소들(이스티오(역할기반접근제어),아르고(ci/cd),프로메테우스(모니터링))들은 직접노출되지않고 역할을 제공함
	
	쿠브플로는 기본적으로 웹페이지를 사용해서 컨트롤할수있음
	그리고 주피터노트북이 포함되어있고,쿠브플로에 대한 라이브러리들이 설치되어있어서 그냥 바로던질수있음
	그리고 메타데이터를 알아서 수집해서,모니터링 할수있고
	하이퍼파라미터튜닝도 쉽게할수있음
	그리고 가장 중요한 파이프라인을 제공하고
	서빙도 쉽게 kfserving도 제공함,이걸쓰면 그냥 api처럼 사용할수있음
		
	
	
	
	
-2.쿠브플로아키텍쳐와 모범사례	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	