-1.쿠브플로소개
1.쿠버네티스에서의 머신러닝
	쿠브플로는 쿠버네티스에서 머신러닝을 하기위해 나왔음
	쿠버네티스에서 머신러닝을 돌리면
		결합성
		이식성
		확장성(분산시스템에서의 확장성)
	을 챙길수있게됨
	
	그리고 컨테이너단에서 os단 안에있는 드라이버같은걸 알아서 스케줄링해주기도 함
	
	쿠브플로는
		머신러닝모델을 다른환경에서 트레인,서빙하고싶을때
		머신러닝트레이닝잡을 주피터노트북으로 관리할때
		클라우드에서 cpu,gpu를 사용해서 트레이닝잡을 시작할때
		머신러닝코드를 다른라이브러리에서 합칠때
	사용할수있음
	기본적으로 머신러닝에선,ml코드보다 다른문제들이 너무커서,그런 다른문제들을 커버쳐주는 쿠브플로를 사용하는것
	
	기본적으로 쿠버네티스api는 너무 로우레벨이라서,좀더 하이레벨인 쿠브플로를 사용하기가 더 쉬움
	
	
2.일반적인 유스케이스
	보통 쿠브플로를 사용하는 케이스엔
		gpu를 주피터노트북에 사용하기(보안문제도 해결됨)
		공유 멀티테넌트가 쉬워짐(온프레미스의 하드웨어같은)
		전이학습 러닝 파이프라인같이 파이프라인만들기가 쉬움
		하이퍼파라미터 테스트를 지원해줌
		모델 배포가 쉬움(그냥 api처럼 파드에 콜해서 가져다쓰면됨)
	
3.쿠브플로의 구성요소
	쿠브플로로 만들때 구성요소는 크게
		ml도구(텐서플로같은)
		쿠브플로앱과 스케폴딩(쿠브플로와 쿠버네티스)
		플랫폼/클라우드(gcp,aws)
	로 구성됨
	
	쿠브플로는 기본적으로 쿠버네티스의 커스텀리소스인 tfjob를 사용해서 학습을 돌림
	얘는 쿠버네티스가 분산텐서플로잡을 실행시키도록 해줌
	그리고 쿠브플로의 많은 요소들(이스티오(역할기반접근제어),아르고(ci/cd),프로메테우스(모니터링))들은 직접노출되지않고 역할을 제공함
	
	쿠브플로는 기본적으로 웹페이지를 사용해서 컨트롤할수있음
	그리고 주피터노트북이 포함되어있고,쿠브플로에 대한 라이브러리들이 설치되어있어서 그냥 바로던질수있음
	그리고 메타데이터를 알아서 수집해서,모니터링 할수있고
	하이퍼파라미터튜닝도 쉽게할수있음
	그리고 가장 중요한 파이프라인을 제공하고
	서빙도 쉽게 kfserving도 제공함,이걸쓰면 그냥 api처럼 사용할수있음
		
	
	
	
	
-2.쿠브플로아키텍쳐와 모범사례
1.아키텍쳐개요	
	기본적으로 쿠브플로는,사용자인터페이스로 쿠브플로에 명령을 날리면,걔가 알아서 쿠버네티스에다가 명령을 날려서 잡들을 만드는,상위개념 api라고볼수있음
	이과정에서 이스티오,아르고,프로메테우스등도 관여하지만,캡슐내로 감춰져있고 우리가 알필요는없음
	
	기본적으로 쿠브플로잡의 메타데이터는,내장mysql에 수집되고 저장되고,이걸로 클러스터에서 실행되는 잡을 추적할수있음
	여기서 메타데이터는
		실행
		모델
		데이터셋
	을 포함하는 아티팩트(파이프라인패키지,뷰,대규모메트릭(시계열))에 관한 정보임
	
	즉 쿠브플로로 입력파라미터를 정의하고 잡을 시작하면,파이프라인에서 나온 결과로 혼동행렬과 roc곡선같은게 나옴
	
	아티팩트는 메타데이터와 다르게 취급되고,minIo나 클라우드저장시스템(s3)같은 아티팩트스토리지에 저장됨
	
	쿠브플로의 이스티오는 쿠브플로배포에서 강력한 아이덴티티기반인증과 승인을 사용해 서비스대서비스통신을 보안하는식으로 쿠브플로의 기초부분으로 사용함
	또한 할당량과 접근제어를 지원하는 정책레이어에 이스티오를 사용하고,이스티오는 인그레스,이그레스도 지원함
	즉,쿠브플로는 이스티오를
		서비스대 서비스 통신보안
		배포내의 트래픽메트릭,트레이스,로그자동화
	목적으로 사용함
	
2.멀티테넌시 아키텍쳐
	기본적으로 쿠브플로도 파드형식으로 돌아가기때문에,각 네임스페이스마다 쿠브플로를 격리시키는식으로 여러개의 쿠브플로를 설치할수있음
	멀티테넌시는 공유된 리소스클러스터를 준비하고,여러사용자들이 스케줄링으로 클러스터에 접근하게하는방식
	즉,네임스페이스와 멀티테넌시 두가지 방법이 있음
	
	멀티테넌시의 특성은
		사용자스토리지와 워크로드격리
		로드밸런싱
		하나의 머신리소스를 사용자간공유
	그외로 쿠버네티스로 공유클러스터를 준비하는것의 장점은
		리소스스케줄링
		커버로스와 ad로 보안통합
		이기종 gpu지원
		고비용리소스의 효율적사용
		특정종류잡들이 우선순위가 되도록하는 노드수준 사용자접근
		
	다중사용자 아키텍쳐에서 중요한건,사용자의 인증을 확인하고,인증에 기반해서 쿠브플로안의 서비스와 쿠브플로접근제한
	이때,쿠브플로의 rbac와 쿠버네티스의 rbac는 같은권한을 가지게해야함(안그러면 kubectl로 건드리니까)
	
	쿠브플로의 멀티테넌시는 사용자 네임스페이스(쿠버네티스 프로파일)에 기반하고,1대1로 대응됨
	즉 클러스터롤로 만들어두면 그거따라가는거임
	
	
3.주피터노트북 아키텍쳐
	쿠브플로배포마다 여러 주피터노트북서버를 셋업할수있음
	각 주피터노트북서버는 여러 주피터노트북파일을 포함할수있고,각 서버는 하나의 네임스페이스에 속함
	
	
4.파이프라인 아키텍쳐
	쿠브플로의 파이프라인은,dsl을 이용해 적으면 컴파일러가 이걸 yaml로 바꿔줌
	여기서 파이프라인서비스가 쿠버네티스리소스(crd)를 준비하고 실행하기위해 api서버를 호출함
	이때 컨테이너가 실행되는동안,사이드카컨테이너에서 메타데이터와 아티팩트를 각각 저장함
	
	
5.모범사례
	기본적으로 의존성(pip)을 위해선 도커이미지생성시에 의존성을 주입하면됨
	그리고 gpu사용할땐,gpu가 있는지 확인하고,gpu와 주피터노트북에 맞는 컨테이너이미지를 사용해야함(gpu지원되는게 따로있음)
	
	
	
	
	
-3.쿠브플로 설치계획	
1.보안계획
	쿠브플로의 구성요소는 크게 두가지 카테고리로 나눌수있음
		쿠버네티스api를 확장하는 구성요소
		쿠버네티스에서 실행되는 앱구성요소
	쿠버네티스api를 확장하는 구성요소는,즉 커스텀리소스를 사용해 tfjob같은 새로운리소스를 만드는것
	쿠버네티스에서 실행되는 구성요소는,주피터노트북,캐팁(하이퍼파라미터트레이닝),파이프라인등 쿠버네티스에서 파드로 배포된 앱들
	
	이래서 구성요소마다 접근방식이 좀 다를수있음
		crd를 사용할떈,쿠버네티스api를 사용해서 상호작용
		배포된파드구성요소는,api를 통해 상호작용함
	앱이 쿠버네티스에 배포되고 시작되면,서버나 서비스가 인증과 승인에 대한 방식을 제공해야함
	
	기본적으로 쿠버네티스에서 보안은,리버스프록시인 인그레스를 이용해서 클러스터밖에서 통신을 받고,
	인그레스가 서비스에 던지기전에 인증됐는지 확인하기위해 토큰을 같이받는식으로 동작함
	
	쿠브플로에서의 보안은,쿠브플로는 단순히 여러 파드들의 집합이라서,컨테이너 내부적으로 보안설정을 해줘야함
	기본적으론 이스티오를 통해 할수있고,안되는건 개별적으로 해야할수도있음
	
	그리고 기본적으로,쿠버네티스단에서도 dex를 사용해서 인증을 어느정도 통합할수도있음
	
2.워크로드
	쿠브플로가 지원할 목표워크로드를 생각해보는건,스토리지를 어떻게 할당할것인지,즉 인프라스트럭처의 위치를 고려하는걸 도와줌
	기본적으로 두가지방식이있는데
		데이터를 투입하고 보관하는것과 머신러닝하는데 사용하는패턴
		머신러닝하는데만 사용하고 스토리지론 사용하지않는패턴
	
	기본적으론,결국 데이터셋이 커지면 하나의 노드에 다 박을순없고,분산스토리지를 해야하기때문에 머신러닝하는데만 사용하는게 좋음
		
	
3.인프라스트럭처 계획
	온프레미스때 고려해야할것(gpu열관리)이 있긴한데 필요없을듯
	

4.knative를 이용한 서버리스운영
	쿠브플로의 핵심은 knative임
	얘는 서버리스,선언형,컨테이너기반 워크로드를 쿠버네티스에서 실현하는 구성블록임
	얘는
		쿠버네티스 이벤트트리거
		0에서 확장하거나 0으로 축소
		gpu와 tpu를 위한 큐 기반 오토스케일링
	또한 블루그린배포도 해주고,스케일링도 오토로 해줌
	knative이벤팅을 사용하면 이벤트소스에 선언적으로 구독을 생성할수있고,엔드포인트로 이벤트를 라우팅할수있음
	knative서빙은 쿠버네티스에 상태가 없는 서비스를 더 쉽게 제공함
	즉,knative는 이벤트와 스케일링이 주요 업무임

5.규모와 성장
	사용자들이 고정적으로 하는 일을 표로 정리하면,각 시간마다 gpu가 얼마나 동작하는지 알수있고,
	그 표를 기반으로 비는시간대에 작업을 분배할수있음(클라우드면 상관없겠지만)
	
	
	
	
-4.온프레미스에 쿠브플로설치
	쿠브플로를 설치할땐 도커를 설치하고,쿠버네티스부터 설치하고(이건스킵),헬름이나 쿠스토마이즈로 쿠브플로를 설치하면됨
	쿠브플로가 스토리지 쓸때도,pv,pvc쓰거나 외부에서 api로 가져다쓰거나 같은 방식임
	
1.쿠브플로접근과 상호작용
	기본적으로 kubectl,웹 대시보드등으로 상호작용할수있음
	
2.설치
	최소조건도 있고,맞는버전도 있으니 설치할때 알아보자
	
	
	
-5.구글클라우드 쿠브플로 운영	
1.구글클라우드개요
	구글클라우드스토리지는 주소를 통해 지정가능함
		http://bucket.storage.googleapis.com/object 이런느낌
	클라우드상황에선 쿠브플로의 인증,승인을 사용할필요가없음(클라우드단에서 다 거르기때문),그래서 구글이 주는 jwt를 받기만하면됨
	
	
2.구글클라우드sdk설치
	sdk를 설치하면,gcloud gsutil bq 3개가 깔림
	그리고 ssl문제를 피하기위해 파이썬을 최신버전으로 업데이트하는게좋음
	
	
3.구글클라우드에 쿠브플로설치
	대충
		gcp프로젝트생성
		프로젝트 설정
		리소스할당 확인
		oauth인증서 셋업
		쿠브플로 설치
	순으로 진행됨
	
-6.아마존 쿠브플로 운영	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	